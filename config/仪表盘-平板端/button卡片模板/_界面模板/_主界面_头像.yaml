主界面_头像:
  triggers_update: all
  styles:   
    grid:
      - grid-template-areas: >-
          [[[
              var num1 = variables.电话费?.length || 0;
              var num2 = states[variables.万年历?.实体]?.attributes.生日.length || 0;
              var height = num1*50 + num2*50 + 138 *1;
              window.地图比例 =`389:${height}` 

              var tel = variables.电话费?.length || 0;
              if (tel > 0){
                return `"回家 头像 ." 
                        ". 头像 ."  
                        ". 头像 ."  
                        ". 头像 ."  
                        "姓名 姓名 姓名"  
                        "距家信息 距家信息 距家信息"       
                        "电话信息 电话信息 电话信息"
                        "弹出菜单 弹出菜单 弹出菜单"`
              }
              else {
                return `"回家 头像 ."  
                        ". 头像 ."   
                        ". 头像 ."  
                        ". 头像 ."  
                        "姓名 姓名 姓名" 
                        "距家信息 距家信息 距家信息"
                        "弹出菜单 弹出菜单 弹出菜单"`
              }
          ]]]
      - grid-template-columns: 35px 35px 35px
      - grid-template-rows: |
          [[[
              var tel = variables.电话费?.length || 0;
              if (tel > 0){
                return `16px 18px 8px 8px 16px 23px 21px 120px`
              }
              else {
                return `16px 18px 8px 8px 34px 26px 120px`
              }
          ]]]
      - font-size: 10px
      - color: rgb(175,238,238)
    card:
      - padding: 5px 5px 0 5px
      - width: 115px  
      - height: 120px   
      - border-radius: 10px
      - border-color: transparent
      - background: |
          [[[
             return theme()=="on" ? "rgb(0,0,0,0.3)" : "rgb(255,255,255,0.25)"
          ]]]
    custom_fields:
      回家:
        - text-align: left
        - overflow: visible 
        - align-self: start
  custom_fields: 
    头像: 
      card:
        type: custom:button-card
        show_entity_picture: true
        show_name: false
        entity_picture: '[[[ return states[variables.人员实体]?.attributes?.entity_picture ?? ""]]]'
        styles:
          custom_fields:
            progress:
              - padding: 0
              - position: absolute
              - align-self: start
              - width: 48px
              - height: 48px
              - margin-left: 0px 
              - margin-top: 0px
              - border-radius: 50%
              - background: |
                  [[[            
                    var dianliang =states[variables.人员app电量]?.state || "0";
                    const percentage = Math.min(100, Math.max(0, dianliang));
                    const color = `hsl(${percentage}, 80%, 50%)`;
                    return `conic-gradient(${color} 0% ${percentage}%, transparent ${percentage}% 100%)`;
                  ]]]
              - mask: radial-gradient(transparent 57%, black 32%)
              - z-index: -1
          entity_picture:
            - width: 40px
            - height: 40px
            - border-radius: 100%
          card:  
            - padding: 0
            - width: 48px
            - height: 48px
            - background: rgb(0,0,0,0)
            - border-radius: 100%

        custom_fields:
          progress: ""
    回家: |
      [[[         
          const entityId = variables.人员回家时间;
          if (!entityId || !states[entityId]) return "";
          const time = parseFloat(states[entityId]?.attributes?.驾车通勤时间 ?? "0") || 0;
          const dis = parseFloat(states[entityId]?.attributes?.驾车通勤距离 ?? "0") || 0;
          const time2 = time >= 180 ? (time / 60).toFixed(1) + " h" : Math.round(time) + " min";
          const dis2 = dis >= 0 ? dis.toFixed(1) + " km" : "0 km";
          const label = `${dis2}<br>${time2}<br><br>`;
          if (states[variables.人员ip实体]?.state === 'home')
              return `<font color="#afeeee"><b>${label}</b></font>`;
          if (states[variables.人员ip实体]?.state === 'not_home')
              return `<font color="#FF7F50"><b>${label}</b></font>`;
      ]]]
    姓名: 
      card:
        type: custom:button-card
        show_label: true
        label: |
          [[[ 
              var shengri1 = states[variables.万年历?.实体]?.attributes?.生日[variables.万年历?.位置]?.农历天数;
              var shengri2 = states[variables.万年历?.实体]?.attributes?.生日[variables.万年历?.位置]?.阳历天数;
              var shengri;
              if ((shengri1 != null && shengri1 !== "") && (shengri2 != null && shengri2 !== "")) {
                  shengri = Math.min(Number(shengri1), Number(shengri2));
              } else if (shengri1 != null && shengri1 !== "") {
                  shengri = Number(shengri1);
              } else if (shengri2 != null && shengri2 !== "") {
                  shengri = Number(shengri2);
              } else {
                  shengri = -1; 
              }
              if (shengri == 0) {
                  return variables.姓名 + '<font size ="1"><b>&ensp;🎂今天</b></font>';
              } else if (shengri >= 20) {
                  return variables.姓名 + '<font size ="1"><b>&ensp;🎂' + shengri + '天</b></font>';
              } else if (shengri > 0) {
                  return variables.姓名 + '<font size ="1" color="#FF7f50"><b>&ensp;🎂' + shengri + '天</b></font>';
              } else {
                  return variables.姓名; 
              }
          ]]]
        styles:
          card:
            - padding: 5px 0 0 0
            - background: transparent 
          label:
            - font-size: 15px
            - color: |
                [[[
                  if (states[variables.人员ip实体]?.state =='home') return 'rgb(175,238,238)';   
                  if (states[variables.人员ip实体]?.state =='not_home') return 'rgb(255,127,80)';       
                ]]] 
    距家信息: 
      card:
        type: custom:button-card
        show_label: true
        label: |
          [[[ 
              var lat1 = states["zone.home"].attributes.latitude;    // home纬度
              var lng1 = states["zone.home"].attributes.longitude;   // home经度
              var lat2 = states[variables.人员app实体]?.attributes?.latitude;    // 手机纬度
              var lng2 = states[variables.人员app实体]?.attributes?.longitude;   // 手机经度
              var radLat1 =lat1 * Math.PI / 180.0
              var radLat2 =lat2 * Math.PI / 180.0
              var radLng1 =lng1 * Math.PI / 180.0
              var radLng2 =lng2 * Math.PI / 180.0
              var a = radLat1 - radLat2; 
              var b = radLng1 - radLng2;
              var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) + Math.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(b / 2), 2)));     
    
              var date1 = new Date();        //现在时间
              var time1 = date1.getTime();
              var d = states[variables.人员ip实体]?.last_changed ?? "";   //最后更新时间
              var date2 = new Date(d.slice(0, 19));
              var time2 = date2.getTime();
              var time = ((time1-time2)/3600000-8).toFixed(1);  //时间数值
              var time = time > 24 ? (time/24).toFixed(1)+"d" : time + "h";

              return Math.round(s * 6378.137 *10 ) / 10 +"km" +"&ensp;&ensp;" + time;
          ]]]
        styles:
          card:
            - background: transparent 
            - overflow: visible
          label:
            - color: |
                [[[
                  if (states[variables.人员ip实体]?.state =='home') return 'rgb(175,238,238)';   
                  if (states[variables.人员ip实体]?.state =='not_home') return 'rgb(255,127,80)';       
                ]]] 
            - font-size: 11px
            - overflow: visible
    电话信息: 
      card:
        type: custom:button-card
        styles:   
          grid:
            - grid-template-areas: >-
                [[[
                    var tel = variables.电话费?.length || 0;
                    if (tel == 3){
                      return `"电话1 电话2 电话3"`
                    }
                    if (tel == 2){
                      return `"电话1 电话2"`
                    }
                    if (tel == 1){
                      return `"电话1"`
                    }
                    else {
                      return `"电话1 电话2 电话3"`
                    }
                ]]]
            - grid-template-columns: |
                [[[
                    var tel = variables.电话费?.length || 0;
                    if (tel == 3){
                      return `33px 38px 38px`
                    }
                    if (tel == 2){
                      return `50% 50%`
                    }
                    if (tel == 1){
                      return `100%`
                    }
                    else {
                      return `38px 38px 38px`
                    }
                ]]]
            - grid-template-rows: 25px
            - font-size: 10px
            - color: rgb(175,238,238)
            - overflow: visible
          card:
            - padding: 0
            - width: 115px  
            - height: 25px    
            - border-radius: 10px
            - border-color: transparent
            - background: transparent
            - overflow: visible
        custom_fields: 
          电话1: | 
            [[[ 
                var name = variables.电话费?.[0]?.name ?? "";
                var state = states[variables.电话费?.[0]?.entity]?.state ?? "";
                return state>=30 ? name+'<br>'+state : name+'<font color="#FF2000"><b><br>'+state+'</b></font>';
            ]]]
          电话2: | 
            [[[ 
                var name = variables.电话费?.[1]?.name ?? "";
                var state = states[variables.电话费?.[1]?.entity]?.state ?? "";
                return state>=30 ? name+'<br>'+state : name+'<font color="#FF2000"><b><br>'+state+'</b></font>';
            ]]]
          电话3: | 
            [[[ 
                var name = variables.电话费?.[2]?.name ?? "";
                var state = states[variables.电话费?.[2]?.entity]?.state ?? "";
                return state>=30 ? name+'<br>'+state : name+'<font color="#FF2000"><b><br>'+state+'</b></font>';
            ]]]
    弹出菜单: 
      card:
        type: custom:button-card
        styles:   
          card: 
            - padding: 0
            - width: 115px  
            - height: 120px    
            - margin-top: -175.5px
            - margin-left: -5px
            - background: rgb(0,0,0,0)

        tap_action:  
          action: fire-dom-event   
          browser_mod:
            service: browser_mod.popup
            data:
              style: |
                [[[ 
                    var home = states[variables.人员ip实体].state;
                    return theme_none_touxiang(home,800);  
                ]]]
              content:
                type: horizontal-stack
                cards:
                  - type: vertical-stack
                    cards:
                      - type: custom:button-card     
                        template: 生日信息卡片    
                        variables:
                          主题: '[[[ return theme()]]]'
                          万年历: '[[[ return variables.万年历?.实体 ]]]' 
                      - type: custom:button-card
                        template: 话费信息卡片    
                        variables: 
                          主题: '[[[ return theme()]]]'
                          电话费: '[[[ return variables.电话费 ?? "" ]]]' 
                  - type: map
                    entities:
                      - entity: |
                          [[[ 
                              return variables.人员实体 
                          ]]]
                    hours_to_show: 24
                    aspect_ratio: '[[[ return 地图比例 ]]]'
                    theme_mode: auto
                    card_mod: 
                      style: 
                        ha-map $ ha-entity-marker $: |
                          .marker {
                            border: 3px solid var(--state-person) !important;
                            border-radius: 50% 50% 50% 0px !important;
                            transform: rotate(-45deg) translate(50%, -50%);
                            overflow: visible !important;
                            background: var(--state-person) !important;
                          }
                          .entity-picture {
                            transform: rotate(45deg);
                            border-radius: 50%;
                          }
                        ha-map $: '[[[return theme_ha_map(variables.人员回家时间)]]]'
                        .: |
                          ha-card {
                            box-shadow: none;
                            border-width: 0;
                          }
                          ha-icon-button {
                            margin: 0px 7px 0px;
                            color: orange !important;
                            background: rgb(0,0,0,0.2);
                            border-radius: 20%;
                            border: 1px solid rgb(255,255,255,0.5) !important;
                          }   