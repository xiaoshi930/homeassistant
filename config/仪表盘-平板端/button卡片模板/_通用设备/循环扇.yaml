循环扇:
  triggers_update:
    - '[[[ return variables.循环扇 ?? ""]]]'
    - '[[[ return variables.上下摆风角度 ?? ""]]]'
    - '[[[ return variables.左右摆风角度 ?? ""]]]'
    - '[[[ return variables.上下摆风 ?? ""]]]'
    - '[[[ return variables.循环摆风 ?? ""]]]'
    - '[[[ return variables.风速档位 ?? ""]]]'
    - '[[[ return variables.持续向上转 ?? ""]]]'
    - '[[[ return variables.持续向下转 ?? ""]]]'
    - '[[[ return variables.持续向左转 ?? ""]]]'
    - '[[[ return variables.持续向右转 ?? ""]]]'
    - '[[[ return variables.上下手动摇头 ?? ""]]]'
    - '[[[ return variables.左右手动摇头 ?? ""]]]'
    - '[[[ return variables.一键回正 ?? ""]]]'
    - '[[[ return variables.温度 ?? ""]]]'
    - '[[[ return variables.湿度 ?? ""]]]'
    - '[[[ return variables.提示音 ?? ""]]]'
    - '[[[ return variables.按键锁 ?? ""]]]'
    - '[[[ return variables.指示灯 ?? ""]]]'
    - '[[[ return variables.关机回正 ?? ""]]]'
    - '[[[ return variables.定时关机 ?? ""]]]'
  styles:
    grid: 
      - function: |
          [[[
              window.循环扇开启颜色 = "rgb(0,245,255)";
          ]]]
      - grid-template-areas: | 
          [[[
              if (variables.附加信息=='左侧')
                  return `"副背景 主背景1 主背景1 主背景1 主背景2 主背景2 主背景2"
                          "副背景   .     环背景   .       .     方向盘    .   "
                          "副背景   .     渐变圆   .       .     方向盘    .   "
                          "副背景   .     第一排   .       .     第四排    .   "
                          "副背景   .     第二排   .       .     第五排    .   "
                          "副背景   .     第三排   .       .     第六排    .   "
                          "副背景   .     名称1    .       .     名称2    .   "
                          "副背景   .     状态     .       .       .      .    "
                          "副背景   .     主数值   .       .       .      .    "
                          "副背景   .     主数值   .       .       .      .    "
                          "副背景   .     副数值   .       .       .      .    "
                          "副背景   .     加减按钮 .       .       .      .    "
                          "副背景   .     按钮一   .       .     按钮四    .    "
                          "副背景   .     按钮二   .       .     按钮五    .    "
                          "副背景   .     按钮三   .       .     按钮六    .    "`
              if (variables.附加信息=='右侧')
                  return `"主背景1 主背景1 主背景1 主背景2 主背景2 主背景2 副背景"
                          "  .     环背景   .       .     方向盘    .    副背景"
                          "  .     渐变圆   .       .     方向盘    .    副背景"
                          "  .     第一排   .       .     第四排    .    副背景"
                          "  .     第二排   .       .     第五排    .    副背景"
                          "  .     第三排   .       .     第六排    .    副背景"
                          "  .     名称1     .       .    名称2     .    副背景"
                          "  .     状态     .       .       .      .    副背景"
                          "  .     主数值   .       .       .      .    副背景"
                          "  .     主数值   .       .       .      .    副背景"
                          "  .     副数值   .       .       .      .    副背景"
                          "  .     加减按钮 .       .       .      .    副背景"
                          "  .     按钮一   .       .     按钮四    .    副背景"
                          "  .     按钮二   .       .     按钮五    .    副背景"
                          "  .     按钮三   .       .     按钮六    .    副背景"`
              
              return `"主背景1 主背景1 主背景1 主背景2 主背景2 主背景2"
                      "  .     环背景   .       .     方向盘    .   "
                      "  .     渐变圆   .       .     方向盘    .   "
                      "  .     第一排   .       .     第四排    .   "
                      "  .     第二排   .       .     第五排    .   "
                      "  .     第三排   .       .     第六排    .   "
                      "  .     名称1    .       .     名称2     .   "
                      "  .     状态     .       .       .      .   "
                      "  .     主数值   .       .       .      .   "
                      "  .     主数值   .       .       .      .   "
                      "  .     副数值   .       .       .      .   "
                      "  .     加减按钮 .       .       .      .   "
                      "  .     按钮一   .       .     按钮四    .   "
                      "  .     按钮二   .       .     按钮五    .   "
                      "  .     按钮三   .       .     按钮六    .   "`
          ]]]
      - grid-template-columns: | 
          [[[
             if (variables.附加信息=='左侧')  return "67px 18px 264px 25px 18px 264px 18px";
             if (variables.附加信息=='右侧')  return "18px 264px 25px 18px 264px 25px 67px";
             return "18px 264px 25px 18px 264px 18px";
          ]]]
      - grid-template-rows: 0px 0px 0px 0px 0px 0px 0px 0px 0px 0px 0px 0px 0px 0px 0px 0px 0px
    card:
      - padding: 0
      - width: |
          [[[
              if (variables.附加信息=='左侧' || variables.附加信息=='右侧') return "674px";
              return "607px";
          ]]]
      - height: 505px
      - border-width: 0
      - background: rgb(0,0,0,0)
  custom_fields: 
    主背景1:
      card:
        type: custom:button-card 
        styles:
          card:
            - margin-top: 505px
            - width: 300px
            - height: 505px
            - border-radius: 15px
            - border-width: 0
            - background: '[[[ return variables.主题 =="on" ? "rgb(255,255,255)" : "rgb(50,50,50)" ]]]'
    主背景2:
      card:
        type: custom:button-card 
        styles:
          card:
            - margin-top: 505px
            - width: 300px
            - height: 505px
            - border-radius: 15px
            - border-width: 0
            - background: '[[[ return variables.主题 =="on" ? "rgb(255,255,255)" : "rgb(50,50,50)" ]]]'
    环背景:
      card:
        type: custom:button-card
        styles: 
          card:
            - margin-top: 428px
            - border-width: 0
            - background: |
                [[[ 
                    var state = states[variables.循环扇]?.state;
                    if(state=='on') return 循环扇开启颜色;
                    return variables.主题 =="on" ? "rgb(200,200,200)" : "rgb(100,100,100)";
                ]]]
            - width: 300px
            - height: 264px
            - margin-left: 10px
            - clip-path: >-
                path('M224.1,121.4c0-1.8,0.1-3.5,0-5.3c-0.2-2.8-0.4-5.6-0.8-8.3c-0.6-4.4-1.5-8.8-2.6-13.1
                c-1.1-4.3-2.6-8.5-4.3-12.6c-2.4-5.9-5.3-11.5-8.8-16.8c-2.6-4-5.4-7.8-8.6-11.3c-2.2-2.5-4.4-4.9-6.8-7.2
                c-5.4-5.1-11.3-9.7-17.7-13.5c-6.4-3.8-13.1-7-20.2-9.4c-5.2-1.7-10.4-3-15.8-4c-2.4-0.4-4.8-0.7-7.2-1c-1-0.1-2.1-0.2-3.1-0.2
                c-3.2-0.2-6.5-0.5-9.7-0.2c-3.3,0.2-6.7,0.4-10,0.8c-7.2,0.9-14.2,2.5-21.1,4.9c-9,3.1-17.4,7.5-25.3,12.9c-3.2,2.2-6.3,4.6-9.2,7.2
                c-2.7,2.4-5.2,4.9-7.6,7.5C41,56.7,37.1,62,33.6,67.7c-1.5,2.5-3,5.1-4.3,7.7C25.6,83,22.7,90.9,21,99.2c-0.8,3.7-1.4,7.5-1.8,11.3
                c-0.2,2.2-0.3,4.5-0.5,6.7c-0.1,1.6-0.2,3.2-0.1,4.8c0.1,3.3,0.3,6.6,0.6,9.9c0.5,5.8,1.7,11.4,3.2,17c1.1,4.2,2.6,8.3,4.3,12.4
                c2.9,6.8,6.4,13.2,10.6,19.2c1.9,2.8,4,5.5,6.2,8c1.7,2,3.5,3.9,5.3,5.7c1.7,1.8,2.6,4,2.6,6.5c-0.1,5-4.1,8.8-8.4,9.1
                c-2.9,0.2-5.4-0.7-7.5-2.8c-6-6-11.3-12.5-15.9-19.6c-3.3-5.2-6.3-10.6-8.8-16.2c-2-4.4-3.7-8.9-5.2-13.5c-1.6-5-2.9-10.1-3.7-15.3
                c-0.5-3.3-1-6.5-1.3-9.8c-0.2-2.6-0.5-5.1-0.4-7.7c0-1-0.2-2.1-0.2-3.1c0.2-2.9,0.1-5.8,0.3-8.7c0.1-2.1,0.4-4.2,0.6-6.4
                c0.3-2.5,0.7-4.9,1.1-7.4c1-5.7,2.5-11.3,4.3-16.7c1.4-4.3,3.2-8.4,5-12.5c2.8-6.2,6.3-12.1,10.1-17.8c2.7-4,5.7-7.8,9-11.4
                c2-2.2,4-4.4,6.1-6.5c2.8-2.7,5.6-5.2,8.6-7.6c3-2.5,6.2-4.8,9.4-6.9c4.9-3.2,10-6.1,15.4-8.6c4.5-2.1,9-3.9,13.7-5.5
                c4.4-1.4,8.8-2.6,13.3-3.5c3.7-0.7,7.4-1.3,11.1-1.7c3.7-0.4,7.4-0.5,11.1-0.7c2.9-0.1,5.8,0.1,8.7,0.1c2.2,0,4.4,0.3,6.6,0.5
                c3.7,0.4,7.3,1,11,1.7c2.3,0.4,4.5,1,6.8,1.6c3.7,1,7.3,2.1,10.8,3.4c4.1,1.5,8.1,3.2,12,5.2c6,2.9,11.7,6.4,17.1,10.2
                c2.9,2.1,5.7,4.4,8.5,6.7c3.5,2.9,6.6,6.2,9.8,9.4c2,2.1,3.8,4.3,5.6,6.5c2.6,3.1,4.8,6.4,7,9.7c1.6,2.5,3.1,5,4.5,7.6
                c3.3,6.1,6.1,12.4,8.4,18.9c1.7,4.8,3.1,9.7,4.1,14.7c0.7,3.5,1.3,7,1.7,10.5c0.3,2.7,0.5,5.3,0.7,8c0.2,3.7,0.2,7.4,0.1,11.1
                c-0.1,3.2-0.4,6.4-0.8,9.5c-0.6,5.1-1.5,10.2-2.8,15.3c-1.3,5.2-3,10.3-5,15.3c-1.1,2.8-2.3,5.5-3.6,8.2c-1.8,3.7-3.7,7.2-5.9,10.7
                c-2.2,3.6-4.6,7.1-7.2,10.4c-1.6,2-3.2,4-4.9,5.9c-1.7,2-3.5,3.9-5.3,5.7c-3.1,3.2-8.1,3.6-11.8,1.1c-4.7-3.2-5.2-9.7-1.7-13.6
                c0.8-0.9,1.6-1.7,2.4-2.6c3.7-3.8,7-8,10.1-12.4c3.1-4.6,5.9-9.3,8.2-14.3c3.4-7.2,5.9-14.6,7.6-22.4c0.7-3.2,1.2-6.4,1.6-9.7
                c0.2-2,0.4-3.9,0.5-5.9C224.1,125.3,224.1,123.3,224.1,121.4C224.1,121.4,224.1,121.4,224.1,121.4z')
    渐变圆:
      card:
        type: custom:button-card
        styles: 
          card:
            - margin-top: 398px
            - border-width: 0
            - background: |
                [[[ 
                    var state = states[variables.循环扇]?.state;
                    return state=='on' ? "radial-gradient("+ 循环扇开启颜色 +" -20%, rgb(0,0,0,0) 50%)" : "rgb(0,0,0,0)" ;
                ]]]
            - width: 264px
            - height: 264px
    第一排:
      card:
        type: custom:button-card
        styles:
          card:
            - margin-top: 720px
            - width: 264px
            - height: 42px
            - border-width: 0
            - background: '[[[ return variables.主题 =="on" ? "rgb(230,230,230)" : "rgb(80,80,80)" ]]]'
            - border-radius: 10px
    第二排:
      card:
        type: custom:button-card
        styles:
          card:
            - margin-top: 830px
            - width: 264px
            - height: 42px
            - border-width: 0
            - background: |
                [[[ 
                    var mode = states[variables.循环扇]?.attributes?.preset_mode;
                    if(mode =="自然风") return variables.主题 =="on" ? "rgb(230,230,230)" : "rgb(80,80,80)" 
                    return "rgb(0,0,0,0)"
                ]]]
            - border-radius: 10px
    第三排:
      card:
        type: custom:button-card
        styles:
          card:
            - margin-top: 940px
            - width: 264px
            - height: 42px
            - border-width: 0
            - background: '[[[ return variables.主题 =="on" ? "rgb(230,230,230)" : "rgb(80,80,80)" ]]]'
            - border-radius: 10px
    第四排:
      card:
        type: custom:button-card
        styles:
          card:
            - margin-top: 720px
            - width: 264px
            - height: 42px
            - border-width: 0
            - background: '[[[ return variables.主题 =="on" ? "rgb(230,230,230)" : "rgb(80,80,80)" ]]]'
            - border-radius: 10px
    第五排:
      card:
        type: custom:button-card
        styles:
          card:
            - margin-top: 830px
            - width: 264px
            - height: 42px
            - border-width: 0
            - background: '[[[ return variables.主题 =="on" ? "rgb(230,230,230)" : "rgb(80,80,80)" ]]]'
            - border-radius: 10px
    第六排:
      card:
        type: custom:button-card
        styles:
          card:
            - margin-top: 940px
            - width: 264px
            - height: 42px
            - border-width: 0
            - background: '[[[ return variables.主题 =="on" ? "rgb(230,230,230)" : "rgb(80,80,80)" ]]]'
            - border-radius: 10px
    名称1:
      card:
        type: custom:button-card
        label: '[[[ return states[variables.循环扇]?.attributes?.friendly_name ?? "名称" ]]]'
        show_label: true
        styles:
          card:
            - margin-top: 73px
            - border-width: 0
            - background: rgb(0,0,0,0)
          label:
            - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
            - font-size: 19px
    名称2:
      card:
        type: custom:button-card
        label: '[[[ return states[variables.循环扇]?.attributes?.friendly_name ?? "名称" ]]]'
        show_label: true
        styles:
          card:
            - margin-top: 73px
            - border-width: 0
            - background: rgb(0,0,0,0)
          label:
            - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
            - font-size: 19px
    状态 :
      card:
        type: custom:button-card
        label: |
          [[[ 
              if(states[variables.循环扇]?.state=='on')  return  states[variables.循环扇]?.attributes?.preset_mode;
              if(states[variables.循环扇]?.state=='off') return '关闭';
              return '离线';
          ]]]
        show_label: true
        styles:
          card:
            - border-width: 0
            - background: rgb(0,0,0,0)
            - margin-top: 314px
          label:
            - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
            - font-size: 15px
    副数值:
      card:
        type: custom:button-card
        styles:
          grid:
            - grid-template-areas: |
                'b0 b1 b2' 
            - grid-template-columns: 15% 33% 40%
            - grid-template-rows: 16px
          card:
            - border-width: 0
            - background: rgb(0,0,0,0)
            - margin-top: 492px
            - margin-left: 44px
            - width: 176px
        custom_fields:
          b1:
            card:
              type: custom:button-card
              layout: icon_name
              icon: mdi:thermometer
              name: '[[[ return Math.round(states[variables.温度]?.state,0)+"°C" ]]]'
              show_name: true
              show_icon: true
              styles:
                card:
                  - width: 60px
                  - border-width: 0
                  - background: rgb(0,0,0,0)
                icon:
                  - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
                  - width: 16px
                  - height: 16px
                  - margin-top: -2px
                  - margin-left: 8px
                name:
                  - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
                  - font-size: 16px
          b2:
            card:
              type: custom:button-card
              layout: icon_name
              icon: mdi:water-percent
              name: '[[[ return Math.round(states[variables.湿度]?.state,0)+"%" ]]]'
              show_name: true
              show_icon: true
              styles:
                card:
                  - border-width: 0
                  - background: rgb(0,0,0,0)
                  - width: 60px
                icon:
                  - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
                  - width: 16px
                  - height: 16px
                  - margin-top: -2px
                  - margin-left: 8px
                name:
                  - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
                  - font-size: 16px
    主数值:
      card:
        type: custom:button-card
        label: |
          [[[ 
              var state = Math.round(states[variables.风速档位]?.state,0);
              return state + '<font size ="1"><b>%速</b></font>';
          ]]]
        show_label: true
        styles:
          card:
            - border-width: 0
            - background: rgb(0,0,0,0)
            - margin-top: 405px
          label:
            - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
            - font-size: 45px
    加减按钮:
      card:
        type: custom:button-card
        styles:
          grid: 
            - grid-template-areas: | 
                ". 减按钮 . 加按钮 ."
            - grid-template-columns: 27% 20% 6%
            - grid-template-rows: 100%
          card:
            - padding: 0
            - margin-top: 580px
            - height: 50px
            - border-width: 0
            - border-radius: 0
            - background: rgb(0,0,0,0)
        custom_fields:
          减按钮:
            card:
              type: custom:button-card
              show_icon: true
              icon: mdi:minus
              styles:
                card:
                  - width: 50px
                  - height: 50px
                  - border-radius: 25px
                  - border: '[[[ return variables.主题 =="on" ? "2px solid rgb(150,150,150)" : "2px solid rgb(180,180,180)" ]]]'
                  - margin-left: 0
                  - --mdc-ripple-color: white
                  - --mdc-ripple-press-opacity: 0.3
                  - background: rgb(0,0,0,0)
                icon:
                  - width: 25px
                  - height: 25px
                  - color: '[[[ return variables.主题 =="on" ? "rgb(150,150,150)" : "rgb(180,180,180)"; ]]]'
              tap_action:
                action: call-service
                service: number.set_value
                data:
                  value: '[[[ return states[variables.风速档位]?.state-(1) ]]]'
                target: 
                  entity_id: '[[[ return  variables.风速档位 ?? ""]]]'
          加按钮:
            card:
              type: custom:button-card
              show_icon: true
              icon: mdi:plus
              styles:
                card:
                  - width: 50px
                  - height: 50px
                  - border-radius: 25px
                  - border: '[[[ return variables.主题 =="on" ? "2px solid rgb(150,150,150)" : "2px solid rgb(180,180,180)" ]]]'
                  - margin-left: 0
                  - --mdc-ripple-color: white
                  - --mdc-ripple-press-opacity: 0.3 
                  - background: rgb(0,0,0,0)
                icon:
                  - width: 25px
                  - height: 25px
                  - color: '[[[ return variables.主题 =="on" ? "rgb(150,150,150)" : "rgb(180,180,180)"; ]]]'
              tap_action:
                action: call-service
                service: number.set_value
                data:
                  value: '[[[ return states[variables.风速档位]?.state-(-1) ]]]'
                target: 
                  entity_id: '[[[ return  variables.风速档位 ?? ""]]]'
    按钮一:
      card:
        type: custom:button-card
        styles:
          grid:
            - grid-template-areas: |
                'b1 b2 b3 b4 b5' 
            - grid-template-columns: 20% 20% 20% 20% 20% 
            - grid-template-rows: 42px
          card:
            - padding: 0
            - margin-top: 720px
            - width: 264px
            - height: 42px
            - border-width: 0
            - background: rgb(0,0,0,0) 
        custom_fields:
          b1:
            card:
              type: custom:button-card
              icon: mdi:weather-windy
              template: 循环扇模式按钮样式
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                模式: 直吹风
          b2:
            card:
              type: custom:button-card
              icon: mdi:leaf
              template: 循环扇模式按钮样式
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                模式: 自然风
          b3:
            card:
              type: custom:button-card
              icon: mdi:fan-auto
              template: 循环扇模式按钮样式
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                模式: 智能风
          b4:
            card:
              type: custom:button-card
              icon: mdi:weather-night
              template: 循环扇模式按钮样式
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                模式: 睡眠风
          b5:
            card:
              type: custom:button-card
              icon: mdi:power
              template: 循环扇开机按钮样式
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
    按钮二:
      card:
        type: custom:button-card
        styles:
          grid:
            - grid-template-areas: |
                [[[
                    var mode = states[variables.循环扇]?.attributes?.preset_mode;
                    if(mode =="自然风") return `"mode1 mode2 mode3 mode4"`;
                    if(mode =="直吹风") return `"mode0"`;
                    if(mode =="智能风") return `"mode0"`;
                    if(mode =="睡眠风") return `"mode0"`;
                    return `"mode1 mode2 mode3 mode4"`;
                ]]]
            - grid-template-columns: 25% 25% 25% 25%
            - grid-template-rows: 42px
          card:
            - padding: 0
            - margin-top: 830px
            - width: 264px
            - height: 42px
            - border-width: 0
            - background: rgb(0,0,0,0)
        custom_fields:
          mode0:
            card:
              type: custom:button-card
              styles:
                grid:
                  - grid-template-areas: |
                      "mode9"
                  - grid-template-columns: 100%
                  - grid-template-rows: 42px
                card:
                  - padding: 0
                  - border-width: 0
                  - background: rgb(0,0,0,0)
                  - width: 284px
                  - margin-left: -10px
                  - height: 42px
              custom_fields:
                mode9:
                  card:
                    type: custom:mushroom-number-card
                    entity: '[[[ return variables.风速档位 ?? ""]]]'
                    primary_info: none
                    secondary_info: none
                    icon_type: none
                    card_mod:
                      style: |
                        ha-card { 
                          --rgb-state-number: 0,245,255;
                          --mush-control-border-radius: 20px;
                        }
          mode1:
            card:
              type: custom:button-card
              icon: mdi:fan-speed-1
              template: 风速档位样式
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                风速档位: '[[[ return variables.风速档位 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                档位: 1档
          mode2:
            card:
              type: custom:button-card
              icon: mdi:fan-speed-2
              template: 风速档位样式
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                风速档位: '[[[ return variables.风速档位 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                档位: 2档
          mode3:
            card:
              type: custom:button-card
              icon: mdi:fan-speed-3
              template: 风速档位样式
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                风速档位: '[[[ return variables.风速档位 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                档位: 3档
          mode4:
            card:
              type: custom:button-card
              icon: mdi:fan-alert
              template: 风速档位样式
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                风速档位: '[[[ return variables.风速档位 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                档位: 4档
    按钮三:
      card:
        type: custom:button-card
        styles:
          grid:
            - grid-template-areas: |
                'b1 b2 b3 b4 b5 b6' 
            - grid-template-columns: repeat(6, auto)
            - justify-content: start
            - grid-template-rows: 42px
          card:
            - padding: 0
            - margin-top: 940px
            - width: 264px
            - height: 42px
            - border-width: 0
            - background: rgb(0,0,0,0)
        custom_fields:
          b1:
            card:
              type: custom:button-card
              label: 取消<br>定时
              icon: mdi:timer-off-outline
              template: 循环扇定时开关
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                定时关机:  '[[[ return variables.定时关机 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
          b2:
            card:
              type: custom:button-card
              template: 循环扇定时时间 
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                定时关机:  '[[[ return variables.定时关机 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                时间: 30
                显示时间: 定时<br>30分
          b3:
            card:
              type: custom:button-card
              template: 循环扇定时时间
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                定时关机:  '[[[ return variables.定时关机 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                时间: 60
                显示时间: 定时<br>1小时
          b4:
            card:
              type: custom:button-card
              template: 循环扇定时时间
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                定时关机:  '[[[ return variables.定时关机 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                时间: 180
                显示时间: 定时<br>3小时
          b5:
            card:
              type: custom:button-card
              template: 循环扇定时时间
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                定时关机:  '[[[ return variables.定时关机 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                时间: 360
                显示时间: 定时<br>6小时
          b6:
            card:
              type: custom:button-card
              template: 循环扇定时时间
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                定时关机:  '[[[ return variables.定时关机 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                时间: 540
                显示时间: 定时<br>9小时
    按钮四:
      card:
        type: custom:button-card
        styles:
          grid:
            - grid-template-areas: |
                'b1 b2 b3' 
            - grid-template-columns: 33.33% 33.33% 33.33% 
            - grid-template-rows: 42px
          card:
            - padding: 0
            - margin-top: 720px
            - width: 264px
            - height: 42px
            - border-width: 0
            - background: rgb(0,0,0,0) 
        custom_fields:
          b1:
            card:
              type: custom:button-card
              icon: mdi:arrow-up-down
              name: 上下摆风
              template: 循环扇摆风模式样式
              variables:
                主题: '[[[ return variables.主题 ?? ""]]]'
              styles:
                card: 
                  - margin-right: 1.5px
                  - background: |
                      [[[
                          var mode = states[variables.上下摆风]?.state;
                          return mode=="on" ? 循环扇开启颜色 : "rgb(0,0,0,0)";
                      ]]] 
              tap_action:
                action: call-service
                service: switch.toggle
                data: {}
                target:
                  entity_id: '[[[ return variables.上下摆风 ?? ""]]]'
          b2:
            card: 
              type: custom:button-card
              icon: mdi:arrow-oscillating
              name: 左右摆风
              template: 循环扇摆风模式样式
              variables:
                主题: '[[[ return variables.主题 ?? ""]]]'
              styles:
                card: 
                  - margin-left: 1px
                  - margin-right: 2px
                  - background: |
                      [[[
                          var oscillating = states[variables.循环扇]?.attributes?.oscillating;
                          return oscillating ==true ? 循环扇开启颜色 : "rgb(0,0,0,0)";
                      ]]] 
              tap_action:
                action: call-service
                service: fan.oscillate
                data:
                  oscillating: |
                    [[[
                        var oscillating = states[variables.循环扇]?.attributes?.oscillating;
                        return oscillating ==true ? "false" : "true";
                    ]]]
                target:
                  entity_id: '[[[ return variables.循环扇 ?? ""]]]'
          b3:
            card:
              type: custom:button-card
              icon: mdi:arrow-all
              name: 循环摆风
              template: 循环扇摆风模式样式
              variables:
                主题: '[[[ return variables.主题 ?? ""]]]'
              styles:
                card: 
                  - margin-left: 1.5px
                  - background: |
                      [[[
                          var mode = states[variables.循环摆风]?.state;
                          return mode=="on" ? 循环扇开启颜色 : "rgb(0,0,0,0)";
                      ]]] 
              tap_action:
                action: call-service
                service: switch.toggle
                data: {}
                target:
                  entity_id: '[[[ return variables.循环摆风 ?? ""]]]'
    按钮五:
      card:
        type: custom:button-card
        styles:
          grid:
            - grid-template-areas: |
                'b1 b2 b3 b4 b5 b6' 
            - grid-template-columns: repeat(6, auto)
            - justify-content: start
            - grid-template-rows: 42px
          card:
            - padding: 0
            - margin-top: 830px
            - width: 264px
            - height: 42px
            - border-width: 0
            - background: rgb(0,0,0,0)
        custom_fields:
          b1:
            card:
              type: custom:button-card
              icon: mdi:arrow-up-down
              name: 上下摆风
              template: 循环扇摆风模式样式
              variables:
                主题: '[[[ return variables.主题 ?? ""]]]'
              styles:
                card: 
                  - margin-right: 2px
                  - background: |
                      [[[
                          var mode = states[variables.上下摆风]?.state;
                          return mode=="on" ? 循环扇开启颜色 : "rgb(0,0,0,0)";
                      ]]] 
              tap_action:
                action: call-service
                service: switch.toggle
                data: {}
                target:
                  entity_id: '[[[ return variables.上下摆风 ?? ""]]]'
          b2:
            card:
              type: custom:button-card
              template: 循环扇上下摆风角度
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                上下摆风角度:  '[[[ return variables.上下摆风角度 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                角度: 30
          b3:
            card:
              type: custom:button-card
              template: 循环扇上下摆风角度
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                上下摆风角度:  '[[[ return variables.上下摆风角度 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                角度: 60
          b4:
            card:
              type: custom:button-card
              template: 循环扇上下摆风角度
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                上下摆风角度:  '[[[ return variables.上下摆风角度 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                角度: 90
    按钮六:
      card:
        type: custom:button-card
        styles:
          grid:
            - grid-template-areas: |
                'b1 b2 b3 b4 b5 b6' 
            - grid-template-columns: repeat(6, auto)
            - justify-content: start
            - grid-template-rows: 42px
          card:
            - padding: 0
            - margin-top: 940px
            - width: 264px
            - height: 42px
            - border-width: 0
            - background: rgb(0,0,0,0)
        custom_fields:
          b1:
            card:
              type: custom:button-card
              icon: mdi:arrow-oscillating
              name: 左右摆风
              template: 循环扇摆风模式样式
              variables:
                主题: '[[[ return variables.主题 ?? ""]]]'
              styles:
                card: 
                  - margin-right: 2px
                  - background: |
                      [[[
                          var oscillating = states[variables.循环扇]?.attributes?.oscillating;
                          return oscillating ==true ? 循环扇开启颜色 : "rgb(0,0,0,0)";
                      ]]] 
              tap_action:
                action: call-service
                service: fan.oscillate
                data:
                  oscillating: |
                    [[[
                        var oscillating = states[variables.循环扇]?.attributes?.oscillating;
                        return oscillating ==true ? "false" : "true";
                    ]]]
                target:
                  entity_id: '[[[ return variables.循环扇 ?? ""]]]'
          b2:
            card:
              type: custom:button-card
              template: 循环扇左右摆风角度
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                左右摆风角度:  '[[[ return variables.左右摆风角度 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                角度: 30
          b3:
            card:
              type: custom:button-card
              template: 循环扇左右摆风角度
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                左右摆风角度:  '[[[ return variables.左右摆风角度 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                角度: 60
          b4:
            card:
              type: custom:button-card
              template: 循环扇左右摆风角度
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                左右摆风角度:  '[[[ return variables.左右摆风角度 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                角度: 90
          b5:
            card:
              type: custom:button-card
              template: 循环扇左右摆风角度
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                左右摆风角度:  '[[[ return variables.左右摆风角度 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                角度: 120
          b6:
            card:
              type: custom:button-card
              template: 循环扇左右摆风角度
              variables:
                循环扇: '[[[ return variables.循环扇 ?? ""]]]'
                左右摆风角度:  '[[[ return variables.左右摆风角度 ?? ""]]]'
                主题: '[[[ return variables.主题 ?? ""]]]'
                角度: 150
    副背景: 
      card:
        type: custom:button-card
        styles:
          grid:
            - grid-template-areas: |
                'b1' 'b2' 'b3' 'b4'
            - grid-template-columns: 60px
            - grid-template-rows: 0px 0px 0px 0px
          card:
            - padding: 0
            - margin-top: 505px
            - width: 60px
            - height: 505px
            - border-radius: 15px 
            - border-width: 0
            - background: '[[[ return variables.主题 =="on" ? "rgb(255,255,255)" : "rgb(50,50,50)" ]]]'
        custom_fields:  
          b1:
            card:
              type: custom:button-card
              show_label: true 
              label: 关机<br>回正
              styles: 
                card:
                  - margin-top: 610px
                  - margin-left: 8px
                  - border-radius: 10px
                  - width: 42px
                  - height: 42px
                  - border-width: 0
                  - background: '[[[ return variables.主题 =="on" ? "rgb(230,230,230)" : "rgb(80,80,80)" ]]]'  
                label:
                  - font-size: 11px
                  - color: |
                      [[[
                          if(variables.附加信息=='左侧' || variables.附加信息=='右侧'){
                            var locked = states[variables.关机回正].state;
                            if( locked=='on' ) return 循环扇开启颜色;
                            if( locked=='off') return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; 
                          }
                      ]]]
              variables:
                主题: '[[[ return variables.主题 ]]]'
              tap_action:
                action: call-service
                service: switch.toggle
                data: {}
                target:
                  entity_id: |
                    [[[ 
                        if (variables.附加信息=='左侧' || variables.附加信息=='右侧')
                        return  variables.关机回正 
                    ]]]
          b2:
            card:
              type: custom:button-card
              icon: |
                [[[ 
                    if(variables.附加信息=='左侧' || variables.附加信息=='右侧'){
                      var locked =states[variables.按键锁].state;
                      if( locked=='on' ) return "mdi:lightbulb-on";
                      if( locked=='off') return "mdi:lightbulb-off";
                    }
                ]]]
              show_icon: true
              show_label: true 
              label: 按键锁
              styles: 
                card:
                  - margin-top: 720px
                  - margin-left: 8px
                  - border-radius: 10px
                  - width: 42px
                  - height: 42px
                  - border-width: 0
                  - background: '[[[ return variables.主题 =="on" ? "rgb(230,230,230)" : "rgb(80,80,80)" ]]]'  
                label:
                  - font-size: 11px
                  - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
                icon:
                  - color: |
                      [[[
                          if(variables.附加信息=='左侧' || variables.附加信息=='右侧'){
                            var locked = states[variables.按键锁].state;
                            if( locked=='on' ) return 循环扇开启颜色;
                            if( locked=='off') return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; 
                          }
                      ]]]
              variables:
                主题: '[[[ return variables.主题 ]]]'
              tap_action:
                action: call-service
                service: switch.toggle
                data: {}
                target:
                  entity_id: |
                    [[[ 
                        if (variables.附加信息=='左侧' || variables.附加信息=='右侧')
                        return  variables.按键锁 
                    ]]]
          b3:
            card:
              type: custom:button-card
              icon: |
                [[[ 
                    if(variables.附加信息=='左侧' || variables.附加信息=='右侧'){
                      var light =states[variables.指示灯].state;
                      if( light=='on' ) return "mdi:lightbulb-on";
                      if( light=='off') return "mdi:lightbulb-off";
                    }
                ]]]
              show_icon: true
              show_label: true 
              label: 指示灯
              styles: 
                card:
                  - margin-top: 830px
                  - margin-left: 8px
                  - border-radius: 10px
                  - width: 42px
                  - height: 42px
                  - border-width: 0
                  - background: '[[[ return variables.主题 =="on" ? "rgb(230,230,230)" : "rgb(80,80,80)" ]]]'  
                label:
                  - font-size: 11px
                  - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
                icon:
                  - color: |
                      [[[
                          if(variables.附加信息=='左侧' || variables.附加信息=='右侧'){
                            var light = states[variables.指示灯].state;
                            if( light=='on' ) return 循环扇开启颜色;
                            if( light=='off') return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)";
                          }
                      ]]]
              variables:
                主题: '[[[ return variables.主题 ]]]'
              tap_action:
                action: call-service
                service: light.toggle
                data: {}
                target:
                  entity_id: |
                    [[[ 
                        if (variables.附加信息=='左侧' || variables.附加信息=='右侧')
                        return  variables.指示灯 
                    ]]]
          b4:
            card:
              type: custom:button-card
              icon: |
                [[[ 
                    if(variables.附加信息=='左侧' || variables.附加信息=='右侧'){
                      var alarm =states[variables.提示音].state;
                      if( alarm=='on' ) return "mdi:volume-high";
                      if( alarm=='off') return "mdi:volume-mute";
                    }
                ]]]
              show_icon: true
              show_label: true 
              label: 提示音
              styles: 
                card:
                  - margin-top: 940px
                  - margin-left: 8px
                  - border-radius: 10px
                  - width: 42px
                  - height: 42px
                  - border-width: 0
                  - background: '[[[ return variables.主题 =="on" ? "rgb(230,230,230)" : "rgb(80,80,80)" ]]]'  
                label:
                  - font-size: 11px
                  - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
                icon:
                  - color: |
                      [[[
                          if(variables.附加信息=='左侧' || variables.附加信息=='右侧'){
                            var alarm = states[variables.提示音].state;
                            if( alarm=='on' ) return 循环扇开启颜色;
                            if( alarm=='off') return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)";
                          }
                      ]]]
              variables:
                主题: '[[[ return variables.主题 ]]]'
              tap_action:
                action: call-service
                service: switch.toggle
                data: {}
                target:
                  entity_id: |
                    [[[ 
                        if (variables.附加信息=='左侧' || variables.附加信息=='右侧')
                        return  variables.提示音 
                    ]]]
    方向盘:
      card:
        type: custom:button-card   
        styles:
          function: |
            [[[
                window.r1 = 120;                    //半径
                window.d1 = r1 * Math.SQRT2 / 2;   //直角边
                window.r2 = 78;                    //半径
                window.d2 = r2 * Math.SQRT2 / 2;
            ]]]
          grid:
            - grid-template-areas: |
                ". . . . . . ."
                ". . . 上上 . . ."
                ". . . 上 . . ."
                ". 左左 左 确认 右 右右 ."
                ". . . 下 . . ."
                ". . . 下下 . . ."
                ". . . . . . ."
            - grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr
            - grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr 1fr
            - justify-items: center
            - align-items: center
          card:
            - padding: 0
            - cursor: none
            - --mdc-ripple-press-opacity: 0.3
            - margin-left: 12px
            - margin-top: 400px
            - width: '[[[return 2*r1+"px" ]]]'
            - height: '[[[return 2*r1+"px" ]]]' 
            - border-width: 0
            - border-radius: 50%
            - background: rgb(0,0,0,0)
            - position: relative
        custom_fields:
          上上: 
            card:
              type: custom:button-card   
              show_icon: true  
              icon: mdi:chevron-double-up
              styles:
                icon: 
                  - color: '[[[ return variables.主题 =="on" ? "rgb(255,255,255)" : "rgb(0,0,0)" ]]]'
                  - width: '[[[return 0.2*r1+"px" ]]]'
                  - height: '[[[return 0.2*r1+"px" ]]]'
                  - position: absolute
                  - top: 10%
                  - left: 50%
                  - transform: translate(-50%, -50%)
                card:  
                  - padding: 0
                  - position: absolute
                  - margin-top: '[[[return 0.6*r1+"px" ]]]' 
                  - width: '[[[return 2*r1+"px" ]]]'  
                  - height: '[[[return 2*r1+"px" ]]]'
                  - clip-path: |
                      [[[
                          return `path('M ${r1},${r1}  L ${r1+d1},${r1-d1}  A ${r1},${r1}  90 0, 0  ${r1-d1},${r1-d1} Z')`
                      ]]]
                  - background: |
                      [[[ 
                          var state = states[variables.持续向上转]?.state;
                          if (state == "on")  return 循环扇开启颜色;
                          return variables.主题 =="on" ? "rgb(120,120,120)" : "rgb(180,180,180)";
                      ]]]
                  - transform: translate(-50%, -50%)
              tap_action:
                action: call-service
                service: switch.toggle
                data: {}
                target:
                  entity_id: '[[[ return variables.持续向上转 ]]]'
          下下: 
            card:
              type: custom:button-card   
              show_icon: true  
              icon: mdi:chevron-double-down
              styles:
                icon:
                  - color: '[[[ return variables.主题 =="on" ? "rgb(255,255,255)" : "rgb(0,0,0)" ]]]'
                  - width: '[[[return 0.2*r1+"px" ]]]'
                  - height: '[[[return 0.2*r1+"px" ]]]'
                  - position: absolute
                  - top: 90%
                  - left: 50%
                  - transform: translate(-50%, -50%)
                card: 
                  - position: absolute
                  - margin-top: '[[[return "-"+0.6*r1+"px" ]]]'
                  - top: 50%
                  - left: 50%
                  - width: '[[[return 2*r1+"px" ]]]'
                  - height: '[[[return 2*r1+"px" ]]]'
                  - clip-path: |
                      [[[
                          return `path('M ${r1},${r1}  L ${r1-d1},${r1+d1}  A ${r1},${r1}  90 0, 0  ${r1+d1},${r1+d1} Z')`
                      ]]]
                  - background: |
                      [[[ 
                          var state = states[variables.持续向下转]?.state;
                          if (state == "on")  return 循环扇开启颜色;
                          return variables.主题 =="on" ? "rgb(120,120,120)" : "rgb(180,180,180)";
                      ]]]
                  - transform: translate(-50%, -50%)
              tap_action:
                action: call-service
                service: switch.toggle
                data: {}
                target:
                  entity_id: '[[[ return variables.持续向下转 ]]]'
          左左: 
            card:
              type: custom:button-card   
              show_icon: true  
              icon: mdi:chevron-double-left
              styles:
                icon:
                  - color: '[[[ return variables.主题 =="on" ? "rgb(255,255,255)" : "rgb(0,0,0)" ]]]'
                  - width: '[[[return 0.2*r1+"px" ]]]'
                  - height: '[[[return 0.2*r1+"px" ]]]'
                  - position: absolute
                  - top: 50%
                  - left: 10%
                  - transform: translate(-50%, -50%)
                card: 
                  - position: absolute
                  - margin-left: '[[[return 0.6*r1+"px" ]]]'
                  - top: 50%
                  - left: 50%
                  - width: '[[[return 2*r1+"px" ]]]'
                  - height: '[[[return 2*r1+"px" ]]]'
                  - clip-path: |
                      [[[
                          return `path('M ${r1},${r1}  L ${r1-d1},${r1-d1}  A ${r1},${r1}  90 0, 0  ${r1-d1},${r1+d1} Z')`
                      ]]]
                  - background: |
                      [[[ 
                          var state = states[variables.持续向左转]?.state;
                          if (state == "on")  return 循环扇开启颜色;
                          return variables.主题 =="on" ? "rgb(120,120,120)" : "rgb(180,180,180)";
                      ]]]
                  - transform: translate(-50%, -50%)
              tap_action:
                action: call-service
                service: switch.toggle
                data: {}
                target:
                  entity_id: '[[[ return variables.持续向左转 ]]]'
          右右: 
            card:
              type: custom:button-card    
              show_icon: true  
              icon: mdi:chevron-double-right
              styles:
                icon:
                  - color: '[[[ return variables.主题 =="on" ? "rgb(255,255,255)" : "rgb(0,0,0)" ]]]'
                  - width: '[[[return 0.2*r1+"px" ]]]'
                  - height: '[[[return 0.2*r1+"px" ]]]'
                  - position: absolute
                  - top: 50%
                  - left: 90%
                  - transform: translate(-50%, -50%)
                card: 
                  - position: absolute
                  - margin-left: '[[[return "-"+0.6*r1+"px" ]]]'
                  - top: 50%
                  - left: 50%
                  - width: '[[[return 2*r1+"px" ]]]'
                  - height: '[[[return 2*r1+"px" ]]]'
                  - clip-path: |
                      [[[
                          return `path('M ${r1},${r1}  L ${r1+d1},${r1+d1}  A ${r1},${r1}  90 0, 0  ${r1+d1},${r1-d1} Z')`
                      ]]]
                  - background: |
                      [[[ 
                          var state = states[variables.持续向右转]?.state;
                          if (state == "on")  return 循环扇开启颜色;
                          return variables.主题 =="on" ? "rgb(120,120,120)" : "rgb(180,180,180)";
                      ]]]
                  - transform: translate(-50%, -50%)
              tap_action:
                action: call-service
                service: switch.toggle
                data: {}
                target:
                  entity_id: '[[[ return variables.持续向右转 ]]]'
          上: 
            card:
              type: custom:button-card   
              show_icon: true  
              icon: mdi:chevron-up
              styles:
                icon: 
                  - color: '[[[ return variables.主题 =="on" ? "rgb(255,255,255)" : "rgb(0,0,0)" ]]]'
                  - width: '[[[return 0.2*r1+"px" ]]]'
                  - height: '[[[return 0.2*r1+"px" ]]]'
                  - margin-left: 10%
                  - margin-top: -30%
                  - transform: translate(-50%, -50%)
                card:  
                  - padding: 0
                  - position: absolute
                  - margin-top: '[[[return 0.4*d1+"px" ]]]'
                  - width: '[[[return 2*r1+"px" ]]]'  
                  - height: '[[[return 2*r1+"px" ]]]'
                  - clip-path: |
                      [[[
                          return `path('M ${r1},${r1}  L ${r1+d2},${r1-d2}  A ${r2},${r2}  90 0, 0  ${r1-d2},${r1-d2} Z')`
                      ]]]
                  - background: '[[[ return variables.主题 =="on" ? "rgb(90,90,90)" : "rgb(200,200,200)" ]]]'
                  - transform: translate(-50%, -50%)
              tap_action:
                action: call-service
                service: select.select_option
                data:
                  option: "UP"
                target:
                  entity_id: '[[[ return variables.上下手动摇头 ]]]'
          下: 
            card:
              type: custom:button-card   
              show_icon: true  
              icon: mdi:chevron-down
              styles:
                icon:
                  - color: '[[[ return variables.主题 =="on" ? "rgb(255,255,255)" : "rgb(0,0,0)" ]]]'
                  - width: '[[[return 0.2*r1+"px" ]]]'
                  - height: '[[[return 0.2*r1+"px" ]]]'
                  - margin-left: 10%
                  - margin-top: 50%
                  - transform: translate(-50%, -50%)
                card: 
                  - position: absolute
                  - margin-top: '[[[return "-"+0.4*d1+"px" ]]]'
                  - top: 50%
                  - left: 50%
                  - width: '[[[return 2*r1+"px" ]]]'
                  - height: '[[[return 2*r1+"px" ]]]'
                  - clip-path: |
                      [[[
                          return `path('M ${r1},${r1}  L ${r1-d2},${r1+d2}  A ${r2},${r2}  90 0, 0  ${r1+d2},${r1+d2} Z')`
                      ]]]
                  - background: '[[[ return variables.主题 =="on" ? "rgb(90,90,90)" : "rgb(200,200,200)" ]]]'
                  - transform: translate(-50%, -50%)
              tap_action:
                action: call-service
                service: select.select_option
                data:
                  option: "DOWN"
                target:
                  entity_id: '[[[ return variables.上下手动摇头 ]]]'
          左: 
            card:
              type: custom:button-card   
              show_icon: true  
              icon: mdi:chevron-left
              styles:
                icon:
                  - color: '[[[ return variables.主题 =="on" ? "rgb(255,255,255)" : "rgb(0,0,0)" ]]]'
                  - width: '[[[return 0.2*r1+"px" ]]]'
                  - height: '[[[return 0.2*r1+"px" ]]]'
                  - margin-left: -30%
                  - margin-top: 10%
                  - transform: translate(-50%, -50%)
                card: 
                  - position: absolute
                  - margin-left: '[[[return 0.4*d1+"px" ]]]'
                  - top: 50%
                  - left: 50%
                  - width: '[[[return 2*r1+"px" ]]]'
                  - height: '[[[return 2*r1+"px" ]]]'
                  - clip-path: |
                      [[[
                          return `path('M ${r1},${r1}  L ${r1-d2},${r1-d2}  A ${r2},${r2}  90 0, 0  ${r1-d2},${r1+d2} Z')`
                      ]]]
                  - background: '[[[ return variables.主题 =="on" ? "rgb(90,90,90)" : "rgb(200,200,200)" ]]]'
                  - transform: translate(-50%, -50%)
              tap_action:
                action: call-service
                service: select.select_option
                data:
                  option: "LEFT" 
                target:
                  entity_id: '[[[ return variables.左右手动摇头 ]]]'
          右: 
            card:
              type: custom:button-card    
              show_icon: true  
              icon: mdi:chevron-right
              styles:
                icon:
                  - color: '[[[ return variables.主题 =="on" ? "rgb(255,255,255)" : "rgb(0,0,0)" ]]]'
                  - width: '[[[return 0.2*r1+"px" ]]]'
                  - height: '[[[return 0.2*r1+"px" ]]]'
                  - margin-left: 50%
                  - margin-top: 10%
                  - transform: translate(-50%, -50%)
                card: 
                  - position: absolute
                  - margin-left: '[[[return "-"+0.4*d1+"px" ]]]'
                  - top: 50%
                  - left: 50%
                  - width: '[[[return 2*r1+"px" ]]]'
                  - height: '[[[return 2*r1+"px" ]]]'
                  - clip-path: |
                      [[[
                          return `path('M ${r1},${r1}  L ${r1+d2},${r1+d2}  A ${r2},${r2}  90 0, 0  ${r1+d2},${r1-d2} Z')`
                      ]]]
                  - background: '[[[ return variables.主题 =="on" ? "rgb(90,90,90)" : "rgb(200,200,200)" ]]]'
                  - transform: translate(-50%, -50%)
              tap_action:
                action: call-service
                service: select.select_option
                data:
                  option: "RIGHT"
                target:
                  entity_id: '[[[ return variables.左右手动摇头 ]]]'
          确认: 
            card:
              type: custom:button-card   
              show_label: true
              styles:
                label: 
                  - font-size: 13px
                  - color: '[[[ return variables.主题 =="on" ? "rgb(255,255,255)" : "rgb(0,0,0)" ]]]'
                card: 
                  - position: absolute
                  - top: 50%
                  - left: 50%
                  - width: '[[[return 0.9*r2+"px" ]]]'
                  - height: '[[[return 0.9*r2+"px" ]]]'
                  - border-radius: 50%
                  - transform: translate(-50%, -50%)
                  - background: '[[[ return variables.主题 =="on" ? "rgb(50,50,50,0.9)" : "rgb(255,255,255,0.9)" ]]]'
              tap_action:
                action: call-service
                service: switch.toggle
                data: {}
                target:
                  entity_id: '[[[ return variables.一键回正 ]]]'
循环扇模式按钮样式:
  triggers_update:
    - '[[[ return variables.循环扇 ]]]'
  show_icon: true
  show_label: true
  label: '[[[ return variables.模式]]]'
  styles:
    card: 
      - width: 52.8px 
      - height: 42px
      - border-radius: 10px
      - border-width: 0
      - background: |
          [[[
              var mode = states[variables.循环扇]?.attributes?.preset_mode;
              return variables.模式== mode ? 循环扇开启颜色 : "rgb(0,0,0,0)";
          ]]] 
    icon:  
      - width: 15px
      - height: 15px
      - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
    label:    
      - font-size: 10px
      - font-weight: bold
      - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
  tap_action:
    action: call-service
    service: fan.set_preset_mode
    data:
      preset_mode: '[[[ return  variables.模式 ]]]'
    target:
      entity_id: '[[[ return  variables.循环扇 ?? ""]]]'
循环扇开机按钮样式:
  triggers_update:
    - '[[[ return variables.循环扇 ]]]'
  show_icon: true
  styles:
    card: 
      - width: 52.8px 
      - height: 42px
      - border-radius: 10px
      - border-width: 0
      - background: |
          [[[
              var state = states[variables.循环扇]?.state;
              if( state== "off" ) return variables.主题 =="on" ? "rgb(180,180,180)" : "rgb(150,150,150)";
              return "rgb(0,0,0,0)";
          ]]] 
    icon:  
      - width: 20px
      - height: 20px
      - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
  tap_action:
    action: call-service
    service: fan.toggle
    data: {}
    target:
      entity_id: '[[[ return  variables.循环扇 ?? ""]]]'
风速档位样式:
  triggers_update:
    - '[[[ return variables.循环扇 ?? ""]]]'
    - '[[[ return variables.风速档位 ?? ""]]]'
  show_label: true
  show_icon: true
  label: '[[[ return variables.档位 ]]]'
  styles:
    card:
      - cursor: none
      - --mdc-ripple-press-opacity: 0.2
      - width: 66px
      - height: 42px 
      - border-radius: 10px
      - background: |
          [[[
              var mode = states[variables.风速档位]?.state;
              if ( mode >=1  && mode < 35 && variables.档位=="1档") return 循环扇开启颜色;
              if ( mode >=35 && mode < 70 && variables.档位=="2档") return 循环扇开启颜色;
              if ( mode >=70 && mode < 100 && variables.档位=="3档") return 循环扇开启颜色;
              if ( mode ==100 && variables.档位=="4档") return 循环扇开启颜色;
              return "rgb(0,0,0,0)";
          ]]] 
    icon:  
      - width: 15px
      - height: 15px
      - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
    label:    
      - font-size: 10px
      - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
  tap_action:
    action: call-service
    service: number.set_value
    data:
      value: |
        [[[ 
           if(variables.档位 =="1档") return "1";
           if(variables.档位 =="2档") return "35";
           if(variables.档位 =="3档") return "70";
           if(variables.档位 =="4档") return "100";
        ]]]
    target: 
      entity_id: '[[[ return  variables.风速档位 ?? ""]]]'
循环扇定时开关:
  triggers_update:
    - '[[[ return variables.循环扇 ?? ""]]]'
    - '[[[ return variables.定时关机 ?? ""]]]'
  show_label: true
  show_icon: false
  styles:
    card:
      - cursor: none 
      - --mdc-ripple-press-opacity: 0.2
      - width: 52.8px
      - height: 42px
      - border-radius: 10px
      - background: |
          [[[ 
              var time = states[variables.定时关机]?.state;
              return time!= "0" ? 循环扇开启颜色 : "rgb(0,0,0,0)";
          ]]]
    icon:  
      - width: 15px
      - height: 15px 
      - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
    label:    
      - font-size: 10px
      - font-weight: bold
      - overflow: visible
      - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
  tap_action:
    action: call-service
    service: number.set_value
    data:
      value: "0"
    target:
      entity_id: '[[[ return variables.定时关机 ?? ""]]]'
循环扇定时时间:
  triggers_update:
    - '[[[ return variables.循环扇 ?? ""]]]'
    - '[[[ return variables.定时关机 ?? ""]]]'
  show_label: true
  label: '[[[ return  variables.显示时间 ]]]'
  styles:
    card:
      - cursor: none 
      - --mdc-ripple-press-opacity: 0.2
      - width: 42.24px
      - height: 42px
      - border-radius: 10px
      - background: |
          [[[ 
              var time = states[variables.定时关机]?.state;
              return variables.时间== time ? 循环扇开启颜色 : "rgb(0,0,0,0)";
          ]]]
    label:    
      - font-size: 10px
      - font-weight: bold
      - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
  tap_action:
    action: call-service
    service: number.set_value
    data:
      value: '[[[ return variables.时间 ]]]'
    target:
      entity_id: '[[[ return variables.定时关机 ?? ""]]]'
循环扇摆风模式样式:
  triggers_update:
    - '[[[ return variables.循环扇 ]]]'
  show_icon: true
  show_name: true
  layout: icon_name
  styles:
    card: 
      - width: 86px 
      - height: 42px
      - border-radius: 10px
      - border-width: 0
    icon:  
      - width: 15px
      - height: 15px
      - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
    name:    
      - font-size: 10px
      - font-weight: bold
      - margin-left: -15px
      - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
循环扇上下摆风角度:
  triggers_update:
    - '[[[ return variables.循环扇 ?? ""]]]'
    - '[[[ return variables.上下摆风角度 ?? ""]]]'
  show_label: true
  label: '[[[ return  variables.角度 + "°"]]]'
  styles:
    card:
      - cursor: none 
      - --mdc-ripple-press-opacity: 0.2
      - width: 58.67px
      - height: 42px
      - border-radius: 10px
      - background: |
          [[[
              var included = states[variables.上下摆风角度]?.state;
              return included ==variables.角度 ? 循环扇开启颜色 : "rgb(0,0,0,0)";
          ]]] 
    label:    
      - font-size: 10px
      - font-weight: bold
      - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
  tap_action:
    action: call-service
    service: select.select_option
    data:
      option: '[[[ return variables.角度 ]]]'
    target:
      entity_id: '[[[ return variables.上下摆风角度 ?? ""]]]'
循环扇左右摆风角度:
  triggers_update:
    - '[[[ return variables.循环扇 ?? ""]]]'
    - '[[[ return variables.左右摆风角度 ?? ""]]]'
  show_label: true
  label: '[[[ return  variables.角度 + "°"]]]'
  styles:
    card:
      - cursor: none 
      - --mdc-ripple-press-opacity: 0.2
      - width: 35.2px
      - height: 42px
      - border-radius: 10px
      - background: |
          [[[
              var included = states[variables.左右摆风角度]?.state;
              return included ==variables.角度 ? 循环扇开启颜色 : "rgb(0,0,0,0)";
          ]]] 
    label:    
      - font-size: 10px
      - font-weight: bold
      - color: '[[[ return variables.主题 =="on" ? "rgb(0,0,0)" : "rgb(255,255,255)" ]]]'
  tap_action:
    action: call-service
    service: select.select_option
    data:
      option: '[[[ return variables.角度 ]]]'
    target:
      entity_id: '[[[ return variables.左右摆风角度 ?? ""]]]'


