电脑卡片:
  triggers_update:
    - '[[[ return variables.电脑 ?? ""]]]'
    - '[[[ return variables.cpu ?? ""]]]'
    - '[[[ return variables.内存 ?? ""]]]'
    - '[[[ return variables.c盘 ?? ""]]]'
    - '[[[ return variables.d盘 ?? ""]]]'
    - '[[[ return variables.e盘 ?? ""]]]'
    - '[[[ return variables.f盘 ?? ""]]]'
  styles:
    grid:
      - grid-template-areas: >
          [[[
              window.电脑颜色 = "rgb(33,150,243)";  
              window.电脑CPU曲线颜色 = "rgb(233,10,43)";  
              window.电脑内存曲线颜色 = "rgb(233,180,23)";  
              if(variables.电脑 !="none"){
                  return `"背景 背景 背景 背景"
                          "名称 名称 状态 开关"
                          "图标 圆环 圆环 圆环"
                          "空白行 空白行 空白行 空白行"
                          "曲线图 曲线图 曲线图 曲线图"`
              } 
               if(variables.电脑 =="none"){
                  return `` 
              }
          ]]] 
      - grid-template-columns: 15% 26% 47% 12%
      - grid-template-rows: 0 0 0 12.5vw 12.5vw
    card:
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 
      - height: |
          [[[ 
              if( variables.电脑 !="none") {
                return "calc(25vw + 8px);"
              } 
              else return "0";
          ]]]
      - display: |
          [[[
              if (variables.电脑 == "none") {
                  return "none";
              }
          ]]]
  custom_fields:
    背景:
      card:
        type: custom:button-card
        styles:
          card:
            - margin-top: 25vw
            - padding: 0
            - border-width: 0
            - border-radius: 0
            - cursor: none
            - --mdc-ripple-press-opacity: 0
            - border-radius: 3vw
            - height: 25vw
            - background: | 
                [[[
                    var state = states[variables.电脑]?.state;
                    if( variables.主题=='off' && state =='on')  return "linear-gradient(90deg, "+电脑颜色+" -50%, rgb(50,50,50) 50%)";
                    if( variables.主题=='on'  && state =='on')  return "linear-gradient(90deg, "+电脑颜色+" -50%, rgb(255,255,255) 50%)";
                    if( variables.主题=='off' && state =='off') return "rgb(50,50,50)";
                    if( variables.主题=='on'  && state =='off') return "rgb(255,255,255)";
                    return variables.主题 == 'on' ? "rgb(255,255,255)" : "rgb(50,50,50)";
                ]]] 
    曲线图:
      card:
        type: custom:mini-graph-card
        tap_action:
          action: none
        hold_action:
          action: none
        line_width: 1
        hours_to_show: 24
        smoothing: true
        height: 50
        show:
          name: false
          icon: false
          state: false
          legend: false
          loading_indicator: false
        cache: true
        entities:
          - entity: '[[[ return variables.cpu ?? "" ]]]'
            color: '[[[ return 电脑CPU曲线颜色 ]]]'
          - entity: '[[[ return variables.内存 ?? "" ]]]'
            color: '[[[ return 电脑内存曲线颜色 ]]]'
    名称:
      card:
        type: custom:button-card
        show_label: true
        label: '[[[ return states[variables.电脑]?.attributes?.friendly_name ?? "名称"]]]'
        styles:
          card:
            - margin-top: 8.25vw
            - padding: 0
            - border-radius: 0
            - width: 50vw
            - margin-left: 2.5vw
            - border-width: 0
            - background: rgb(0,0,0,0)
          label:
            - justify-self: start
            - font-size: 4vw
            - font-weight: bold
            - color: '[[[ return variables.主题 == "on" ? "rgb(50,50,50)" : "rgb(255,255,255)"; ]]]'
    状态:
      card:
        type: custom:button-card
        label: |
          [[[ 
                var state = states[variables.电脑]?.state ?? "";
                var cpu = states[variables.cpu]?.state ?? "--";
                var memory = states[variables.内存]?.state ?? "--";
                if( state =='on')  
                  return "开机: "+ "CPU " + "<font size='1px'><b>"+cpu+"%&ensp;</b></font>"
                                 + "内存 " + "<font size='1px'><b>"+memory+"%&ensp;</b></font>"
                if( state =='off') 
                  return "关机"
                return "离线";
          ]]]
        show_label: true
        styles: 
          card:
            - margin-top: 8.25vw
            - padding: 0
            - border-radius: 0
            - border-width: 0
            - background: rgb(0,0,0,0)
          label:
            - justify-self: start
            - font-size: 3vw
            - font-weight: bold
            - margin-top: 0.5vw
            - margin-left: 0vw
            - color: '[[[ return variables.主题 == "on" ? "rgb(50,50,50)" : "rgb(255,255,255)"; ]]]'   
    开关:
      card:
        type: custom:button-card
        entity: '[[[ return  variables.电脑 ?? ""]]]'
        tap_action:
          action: toggle
        show_name: false
        show_icon: true
        icon: |
          [[[ 
              var state = states[variables.电脑]?.state;      
              if( state =='on')  return "mdi:toggle-switch";
              if( state =='off') return "mdi:toggle-switch-off";
              return "mdi:toggle-switch-off";
          ]]]
        styles:
          card:
            - margin-top: 8.25vw
            - cursor: none
            - --mdc-ripple-press-opacity: 0.2
            - padding: 0
            - border-radius: 2vw
            - width: 8vw
            - height: 8vw
            - border-width: 0
            - background: rgb(0,0,0,0)
          icon:
            - width: 8vw
            - height: 8vw
            - color: |
                [[[
                    var state = states[variables.电脑]?.state;
                    if( state =='on') return 电脑颜色;
                    return variables.主题 == "on" ? "rgb(50,50,50)" : "rgb(255,255,255)";
                ]]]
    图标:
      card:
        type: custom:button-card
        show_icon: true
        icon: |
          [[[ 
              var state = states[variables.电脑]?.state;      
              if( state =='on')  return "mdi:fan";
              if( state =='off') return "mdi:fan-off";
              return "mdi:fan-off";
          ]]] 
        styles:
          card:
            - margin-top: 33.25vw
            - padding: 0
            - border-radius: 0
            - border-width: 0
            - width: 20vw 
            - height: 20vw
            - margin-left: '-2vw'
            - background: rgb(0,0,0,0)
          icon: 
            - color: |
                [[[
                    var state = states[variables.电脑]?.state;
                    if( state =="on"  )  return 电脑颜色;
                    return variables.主题 == "on" ? "rgb(50,50,50)" : "rgb(255,255,255)";
                ]]]
            - animation: |
                [[[ 
                    var state = states[variables.电脑]?.state;      
                    if( state =='on')  return "rotating 1.5s linear infinite";
                    if( state =='off') return "";
                    return "";          
                ]]]  
    圆环:
      card: 
        type: custom:button-card
        styles:
          grid: 
            - grid-template-areas: >
                "button1 button2 button3 button4 button5 button6" 
            - grid-template-columns: 16.67% 16.67% 16.67% 16.67% 16.67% 16.67% 
            - grid-template-rows: 100% 
          card:
            - margin-top: 33.25vw
            - padding: 0 0 0 0
            - width: 78vw
            - height: 13vw
            - cursor: none
            - --mdc-ripple-press-opacity: 0
            - border-width: 0
            - background: rgb(0,0,0,0)
        custom_fields:
          button1:
            card:
              type: custom:button-card        
              triggers_update:
                - '[[[ return variables.电脑 ?? "" ]]]'
                - '[[[ return variables.cpu ?? "" ]]]'
              template: 电脑圆环样式模板
              variables:
                电脑: '[[[ return variables.电脑 ?? "" ]]]'
                主题: '[[[ return variables.主题 ?? "" ]]]'
                circular: '[[[ return variables.cpu ?? "" ]]]'  
                label: cpu
          button2:
            card:
              type: custom:button-card
              triggers_update:
                - '[[[ return variables.电脑 ?? "" ]]]'
                - '[[[ return variables.内存 ?? "" ]]]'
              template: 电脑圆环样式模板
              variables:
                电脑: '[[[ return variables.电脑 ?? "" ]]]'
                主题: '[[[ return variables.主题 ?? "" ]]]'
                circular: '[[[ return variables.内存 ?? "" ]]]'  
                label: 内存
          button3:
            card:
              type: custom:button-card
              triggers_update:
                - '[[[ return variables.电脑 ?? "" ]]]'
                - '[[[ return variables.c盘 ?? "" ]]]'
              template: 电脑圆环样式模板
              variables:
                电脑: '[[[ return variables.电脑 ?? "" ]]]'
                主题: '[[[ return variables.主题 ?? "" ]]]'
                circular: '[[[ return variables.c盘 ?? "" ]]]'  
                label: C盘
          button4:
            card:
              type: custom:button-card
              triggers_update:
                - '[[[ return variables.电脑 ?? "" ]]]'
                - '[[[ return variables.d盘 ?? "" ]]]'
              template: 电脑圆环样式模板
              variables:
                电脑: '[[[ return variables.电脑 ?? "" ]]]'
                主题: '[[[ return variables.主题 ?? "" ]]]'
                circular: '[[[ return variables.d盘 ?? "" ]]]'  
                label: D盘
          button5:
            card:
              type: custom:button-card
              triggers_update:
                - '[[[ return variables.电脑 ?? "" ]]]'
                - '[[[ return variables.e盘 ?? "" ]]]'
              template: 电脑圆环样式模板
              variables:
                电脑: '[[[ return variables.电脑 ?? "" ]]]'
                主题: '[[[ return variables.主题 ?? "" ]]]'
                circular: '[[[ return variables.e盘 ?? "" ]]]'  
                label: E盘
          button6:
            card: 
              type: custom:button-card
              triggers_update:
                - '[[[ return variables.电脑 ?? "" ]]]'
                - '[[[ return variables.f盘 ?? "" ]]]'
              template: 电脑圆环样式模板
              variables:
                电脑: '[[[ return variables.电脑 ?? "" ]]]'
                主题: '[[[ return variables.主题 ?? "" ]]]'
                circular: '[[[ return variables.f盘 ?? "" ]]]'  
                label: F盘

电脑圆环样式模板:
  styles:
    grid: 
      - grid-template-areas: >
          "a" "b" "c"
      - grid-template-columns: 100% 
      - grid-template-rows: 0 0 0 
    card:
      - padding: 0 0 0 0
      - width: 13vw
      - height: 13vw
      - border-width: 0
      - background: rgb(0,0,0,0)
  custom_fields:
    a:
      card:
        type: custom:button-card
        label: |
          [[[
              var circular = states[variables.circular]?.state;
              if (circular=='unavailable') return variables.label+"<br>--%";
              if (circular=='unknown') return variables.label+"<br>--%";
              if (circular!='unavailable' && circular!='unknown') return variables.label+"<br>"+circular+"%";
              return "";
          ]]]
        show_label: true
        styles:               
          label: 
            - font-weight: bold
            - font-size: 2.5vw
            - color: '[[[ return variables.主题 == "on" ? "rgb(50,50,50)" : "rgb(255,255,255)"; ]]]'  
          card: 
            - padding: 0 0 0 0
            - width: 11vw
            - height: 11vw   
            - margin-top: 11vw   
            - margin-left: 1vw
            - border-radius: 50% 
            - border: |
                [[[
                    return variables.主题 == "on" ? "1.2vw solid rgb(50,50,50)" : "1.2vw solid rgb(255,255,255)";
                ]]]
            - background: rgb(0,0,0,0)
    b:
      card:
        type: custom:button-card
        styles:               
          card: 
            - padding: 0 0 0 0
            - width: 11vw
            - height: 11vw   
            - margin-top: 11vw  
            - margin-left: 1vw
            - border-radius: 50% 
            - clip-path:  polygon(100% 0, 50% 0, 50% 100%, 100% 100%);
            - border: |
                [[[
                    var circular = states[variables.circular]?.state;
                    if (circular=='unavailable') return "1.2vw solid rgb(125,220,80)";
                    if (circular>0 && circular<=30)   return "1.2vw solid rgb(125,220,80)";
                    if (circular>30 && circular<=70)  return "1.2vw solid rgb(254,153,0)";
                    if (circular>70 && circular<=100) return "1.2vw solid rgb(210,1,3)";
                    return "1.2vw solid rgb(0,0,0,0)";
                ]]]
            - background: rgb(0,0,0,0)
    c:
      card:
        type: custom:button-card
        styles:               
          card: 
            - padding: 0 0 0 0
            - width: 11vw
            - height: 11vw   
            - margin-top: 11vw
            - margin-left: 1vw
            - border-radius: 50%
            - clip-path:  polygon(0 0, 50% 0, 50% 100%, 0 100%);
            - border:  |
                [[[
                    var circular = states[variables.circular]?.state;
                    if(variables.主题=='on'){
                      if (circular=='unavailable') return "1.2vw solid rgb(50,50,50)";
                      if (circular>0 && circular<=50)   return "1.2vw solid rgb(50,50,50)";
                      if (circular>50 && circular<=70)  return "1.2vw solid rgb(254,153,0)";
                      if (circular>70 && circular<=100) return "1.2vw solid rgb(210,1,3)";
                    }
                    if(variables.主题=='off'){
                      if (circular=='unavailable') return "1.2vw solid rgb(255,255,255)";
                      if (circular>0 && circular<=50)   return "1.2vw solid rgb(255,255,255)";
                      if (circular>50 && circular<=70)  return "1.2vw solid rgb(254,153,0)";
                      if (circular>70 && circular<=100) return "1.2vw solid rgb(210,1,3)";
                    }    
                    return "1.2vw solid rgb(0,0,0,0)";
                ]]]  
            - transform:  |
                [[[
                    var circular = states[variables.circular]?.state;
                    var deg1 = states[variables.circular]?.state*3.6-180;
                    var deg2 = states[variables.circular]?.state*3.6;
                    if (circular=='unavailable') return "rotate(-180deg)";
                    if (circular>0 && circular<=50)   return "rotate("+deg1+"deg)";
                    if (circular>50 && circular<=100) return "rotate("+deg2+"deg)";
                    return "";
                ]]]
            - background: rgb(0,0,0,0)