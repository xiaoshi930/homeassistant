HA版本信息卡片:         
  triggers_update: all
  styles:
    grid:   
      - grid-template-areas: >
          "名称 名称 名称"
          "core core1 core2"
          "supervisor supervisor1 supervisor2"
          "os os1 os2"
          "node_red node_red1 node_red2"
      - grid-template-columns: 30% 35% 35%
      - grid-template-rows: 10vw 8vw 8vw 8vw 8vw
    card: 
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - border-width: 0
      - border-radius: 3vw
      - background: '[[[ return variables.主题 == "on" ? "rgb(255,255,255)" : "rgb(50,50,50)"; ]]]' 
      - height: 42vw
      - font-size: 1.5vh
      - font-weight: bold
      - text-align: left
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]' 
  custom_fields:
    名称:
      card: 
        type: custom:button-card 
        label: HA版本信息
        show_label: true
        styles:
          card:
            - padding: 0
            - border-width: 0
            - cursor: none
            - --mdc-ripple-press-opacity: 0
            - border-radius: 3vw
            - height: 10vw
            - background: rgb(0,0,0,0)
          label:
            - font-size: 2vh
            - font-weight: bold
            - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]' 
    core: Core
    supervisor: Supervisor
    node_red: Node Red
    os: Operating System
    core1:
      card: 
        type: custom:button-card 
        template: HA版本信息样式模板1
        variables:
          主题: '[[[ return variables.主题 ]]]'
          entity: '[[[ return variables.ha_core ]]]'
    core2:
      card: 
        type: custom:button-card 
        template: HA版本信息样式模板2
        variables:
          主题: '[[[ return variables.主题 ]]]'
          entity: '[[[ return variables.ha_core ]]]'
    supervisor1:
      card: 
        type: custom:button-card 
        template: HA版本信息样式模板1
        variables:
          主题: '[[[ return variables.主题 ]]]'
          entity: '[[[ return variables.ha_supervisor ]]]' 
    supervisor2:
      card: 
        type: custom:button-card 
        template: HA版本信息样式模板2
        variables:
          主题: '[[[ return variables.主题 ]]]'
          entity: '[[[ return variables.ha_supervisor ]]]' 
    os1:
      card: 
        type: custom:button-card 
        template: HA版本信息样式模板1
        variables:
          主题: '[[[ return variables.主题 ]]]'
          entity: '[[[ return variables.operating_system ]]]' 
    os2:
      card: 
        type: custom:button-card 
        template: HA版本信息样式模板2
        variables:
          主题: '[[[ return variables.主题 ]]]'
          entity: '[[[ return variables.operating_system ]]]' 
    node_red1:
      card: 
        type: custom:button-card 
        template: HA版本信息样式模板1
        variables:
          主题: '[[[ return variables.主题 ]]]'
          entity: '[[[ return variables.node_red ]]]' 
    node_red2:
      card: 
        type: custom:button-card 
        template: HA版本信息样式模板2
        variables:
          主题: '[[[ return variables.主题 ]]]'
          entity: '[[[ return variables.node_red ]]]' 
HA版本信息样式模板1:
  layout: name_state
  show_icon: false
  show_label: true
  show_state: true
  name: |
    [[[
        if(states[variables.entity]?.state) return "当前版本";
        return "" 
    ]]]
  state_display: |
    [[[
        return states[variables.entity]?.attributes?.installed_version ?? "";
    ]]]
  styles: 
    card: 
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - border-width: 0
      - border-radius: 0
      - background: rgb(0,0,0,0)
      - height: 8vw
    name: 
      - font-size: 1.5vh
      - text-align: left
      - width: 30vw
      - color: |
          [[[
              var installed_version=states[variables.entity]?.attributes?.installed_version;
              var latest_version=states[variables.entity]?.attributes?.latest_version;
              if (installed_version!=latest_version) return "rgb(255,20,0)";
              else return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)";
          ]]]
    state:
      - font-size: 1.5vh
      - text-align: left
      - width: 30vw
      - color: |
          [[[
              var installed_version=states[variables.entity]?.attributes?.installed_version;
              var latest_version=states[variables.entity]?.attributes?.latest_version;
              if (installed_version!=latest_version) return "rgb(255,20,0)";
              else return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)";
          ]]]
HA版本信息样式模板2:
  layout: name_state
  show_icon: false
  show_label: true
  show_state: true
  name: |
    [[[
        if(states[variables.entity]?.state) return "最新版本";
        return "" 
    ]]]
  state_display: |
    [[[
        return states[variables.entity]?.attributes?.latest_version ?? "";
    ]]]
  styles: 
    card: 
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - border-width: 0
      - border-radius: 0
      - background: rgb(0,0,0,0)
      - height: 8vw
    name: 
      - font-size: 1.5vh
      - text-align: left
      - width: 30vw
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]'
    state:
      - font-size: 1.5vh
      - text-align: left
      - width: 30vw
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]'

HA资源信息卡片:         
  triggers_update: all
  styles:
    grid:   
      - grid-template-areas: >
          "名称 名称 名称"
          "core core1 core2"
          "supervisor supervisor1 supervisor2"
          "node_red node_red1 node_red2"
          "desk desk1 desk2"
      - grid-template-columns: 30% 35% 35%
      - grid-template-rows: 10vw 8vw 8vw 8vw 8vw
    card: 
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - border-width: 0
      - border-radius: 3vw
      - background: '[[[ return variables.主题 == "on" ? "rgb(255,255,255)" : "rgb(50,50,50)"; ]]]' 
      - height: 42vw
      - font-size: 1.5vh
      - font-weight: bold
      - text-align: left
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]' 
  custom_fields:
    名称:
      card: 
        type: custom:button-card 
        label: HA资源信息
        show_label: true
        styles:
          card: 
            - padding: 0
            - border-width: 0
            - cursor: none
            - --mdc-ripple-press-opacity: 0
            - border-radius: 3vw
            - height: 10vw
            - background: rgb(0,0,0,0)
          label:
            - font-size: 2vh
            - font-weight: bold
            - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]' 
    core: Core
    supervisor: Supervisor
    node_red: Node Red
    desk: Desk硬盘
    core1:
      card: 
        type: custom:button-card 
        template: HA资源信息样式模板1
        variables:
          主题: '[[[ return variables.主题 ]]]'
          name: CPU
          entity: '[[[ return variables.ha_core_cpu ]]]' 
    core2:
      card: 
        type: custom:button-card 
        template: HA资源信息样式模板1
        variables:
          主题: '[[[ return variables.主题 ]]]'
          name: 内存
          entity: '[[[ return variables.ha_core_memory ]]]' 
    supervisor1:
      card: 
        type: custom:button-card 
        template: HA资源信息样式模板1
        variables:
          主题: '[[[ return variables.主题 ]]]'
          name: CPU
          entity: '[[[ return variables.ha_supervisor_cpu ]]]' 
    supervisor2:
      card: 
        type: custom:button-card 
        template: HA资源信息样式模板1
        variables:
          主题: '[[[ return variables.主题 ]]]'
          name: 内存
          entity: '[[[ return variables.ha_supervisor_memory ]]]' 
    node_red1:
      card: 
        type: custom:button-card 
        template: HA资源信息样式模板1
        variables:
          主题: '[[[ return variables.主题 ]]]'
          name: CPU
          entity: '[[[ return variables.node_red_cpu ]]]' 
    node_red2:
      card: 
        type: custom:button-card 
        template: HA资源信息样式模板1
        variables:
          主题: '[[[ return variables.主题 ]]]'
          name: 内存
          entity: '[[[ return variables.node_red_memory ]]]' 
    desk1:
      card: 
        type: custom:button-card 
        template: HA资源信息样式模板2
        variables:
          主题: '[[[ return variables.主题 ]]]'
          entity: '[[[ return variables.ha_host_disk_free ]]]' 
    desk2:
      card: 
        type: custom:button-card 
        template: HA资源信息样式模板3
        variables:
          主题: '[[[ return variables.主题 ]]]'
          entity_free: '[[[ return variables.ha_host_disk_free ]]]' 
          entity_used: '[[[ return variables.ha_host_disk_used ]]]' 
          entity_total: '[[[ return variables.ha_host_disk_total ]]]' 
HA资源信息样式模板1:
  layout: name_state
  show_icon: false
  show_label: true
  show_state: true
  name: '[[[ return variables.name ]]]'
  state_display: |
    [[[
        return states[variables.entity].state + "%";
    ]]]
  styles: 
    card: 
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - border-width: 0
      - border-radius: 0
      - background: rgb(0,0,0,0)
      - height: 8vw
    name: 
      - font-size: 1.5vh
      - text-align: left
      - width: 30vw
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]'
    state:
      - font-size: 1.5vh
      - text-align: left
      - width: 30vw
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]'
  custom_fields:
    back: >
      [[[
          var color = variables.主题 == "on" ? "rgb(100,100,100,0.3)" : "rgb(200,200,200,0.3)";
          return `
            <div style="
              position: absolute;
              top: 20%;
              left: 65%;
              height: 60%;
              width: 5%;
              background: ${color};
            "></div>
          `;
      ]]]
    progress: >
      [[[
          var percent = states[variables.entity].state;
          var color = `hsl(${100-percent}, 100%, 50% ,0.8)`;
          percent= percent*0.6;
          return `
            <div style="
              position: absolute;
              top: ${80 - percent}%;
              left: 65%;
              height: ${percent}%;
              width: 5%;
              background: ${color};
              transition: width 0.5s ease;
            "></div>
          `;
      ]]]
HA资源信息样式模板2:
  layout: name_state
  show_icon: false
  show_label: true
  show_state: true
  name: 空闲
  state_display: |
    [[[
        return states[variables.entity].state + " GB";
    ]]]
  styles: 
    card: 
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - border-width: 0
      - border-radius: 0
      - background: rgb(0,0,0,0)
      - height: 8vw
    name: 
      - font-size: 1.5vh
      - text-align: left
      - width: 30vw
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]'
    state:
      - font-size: 1.5vh
      - text-align: left
      - width: 30vw
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]'
HA资源信息样式模板3:
  layout: name_state
  show_icon: false
  show_label: true
  show_state: true
  name: 已用
  state_display: |
    [[[
        var used = states[variables.entity_used].state;
        var total = states[variables.entity_total].state;
        return Math.round((used/total)*100)+"%";
    ]]]
  styles: 
    card: 
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - border-width: 0
      - border-radius: 0
      - background: rgb(0,0,0,0)
      - height: 8vw
    name: 
      - font-size: 1.5vh
      - text-align: left
      - width: 30vw
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]'
    state:
      - font-size: 1.5vh
      - text-align: left
      - width: 30vw
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]'
  custom_fields:
    back: >
      [[[
          var color = variables.主题 == "on" ? "rgb(100,100,100,0.3)" : "rgb(200,200,200,0.3)";
          return `
            <div style="
              position: absolute;
              top: 20%;
              left: 65%;
              height: 60%;
              width: 5%;
              background: ${color};
            "></div>
          `;
      ]]]
    progress: > 
      [[[
          var used = states[variables.entity_used].state;
          var total = states[variables.entity_total].state;
          var percent = (used/total)*100;
          var color = `hsl(${100-percent}, 100%, 50% ,0.8)`;
          percent= percent*0.6;
          return `
            <div style="
              position: absolute;
              top: ${80 - percent}%;
              left: 65%;
              height: ${percent}%;
              width: 5%;
              background: ${color};
              transition: width 0.5s ease;
            "></div>
          `;
      ]]]

HA备份信息卡片:         
  triggers_update: all
  styles:
    grid:   
      - grid-template-areas: >
          "名称 名称"
          "back1 back2"
          "back3 back4"
      - grid-template-columns: 20% 80%
      - grid-template-rows: 10vw 8vw 8vw
    card: 
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - border-width: 0
      - border-radius: 3vw
      - background: '[[[ return variables.主题 == "on" ? "rgb(255,255,255)" : "rgb(50,50,50)"; ]]]' 
      - height: 26vw
      - font-size: 1.5vh
      - font-weight: bold
      - text-align: left
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]' 
  custom_fields:
    名称:
      card: 
        type: custom:button-card 
        label: HA备份信息
        show_label: true
        styles:
          card: 
            - padding: 0
            - border-width: 0
            - cursor: none
            - --mdc-ripple-press-opacity: 0
            - border-radius: 3vw
            - height: 10vw
            - background: rgb(0,0,0,0)
          label:
            - font-size: 2vh
            - font-weight: bold
            - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]' 
    back1: Back备份
    back3: Back备份
    back2:
      card: 
        type: custom:button-card 
        template: HA备份信息样式模板
        variables:
          主题: '[[[ return variables.主题 ]]]'
          name: 上次备份时间
          entity: '[[[ return variables.backup_last ?? ""]]]' 
    back4:
      card:  
        type: custom:button-card 
        template: HA备份信息样式模板
        variables:
          主题: '[[[ return variables.主题 ]]]'
          name: 下次备份时间
          entity: '[[[ return variables.backup_next ?? ""]]]' 
HA备份信息样式模板:
  layout: name_state
  show_icon: false
  show_label: true
  show_state: true
  name: '[[[ return variables.name ]]]'
  state_display: |
    [[[
        if (variables.name =='上次备份时间') {
          var time = states[variables.entity]?.state;
          var inputDate = new Date(time);
          var now = new Date();
          var diffMs = now - inputDate;
          var diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
          return  time.slice(0,10) + ' ' + time.slice(11,16) + ' (' + diffDays + '天以前)';
        }
        if (variables.name =='下次备份时间') {
          var time = states[variables.entity]?.state;
          var inputDate = new Date(time);
          var now = new Date();
          var diffMs = inputDate- now;
          var diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
          return  time.slice(0,10) + ' ' + time.slice(11,16) + ' (' + diffDays + '天以后)';
        }
    ]]]
  styles: 
    card: 
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - border-width: 0
      - border-radius: 0
      - background: rgb(0,0,0,0)
      - height: 8vw
    name: 
      - font-size: 1.5vh
      - text-align: left
      - width: 70vw
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]'
    state:
      - font-size: 1.5vh
      - text-align: left
      - width: 70vw
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]'

HA更新信息卡片:         
  triggers_update: all
  styles:
    grid:   
      - grid-template-areas: >
          "update1"
          "update2"
      - grid-template-columns: 100%
      - grid-template-rows: 10vw
    card: 
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - border-width: 0
      - border-radius: 3vw
      - background: '[[[ return variables.主题 == "on" ? "rgb(255,255,255)" : "rgb(50,50,50)"; ]]]' 
      - font-size: 1.5vh
      - font-weight: bold
      - text-align: left
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]' 
  custom_fields:
    update1:
      card:
        type: markdown
        content: |-
          {%set num =states.update|selectattr('state','eq','on')|list|count%}
          {% if num >0 %}
          HA更新设备: <font color=red >{{num}}</font>
          {% else %}
          HA更新设备: 0
          {% endif %}
        card_mod: 
          style: '[[[ return theme_markdown() ]]]'
    update2:
      card:
        type: custom:battery-state-card
        icon: mdi:update
        card_mod: 
          style: '[[[ return theme_battery() ]]]'
        filter:
          include:
            - name: entity_id
              value: update.*
          exclude:
            - name: state
              value: 'Off'

HA离线信息卡片:         
  triggers_update: all
  styles:
    grid:   
      - grid-template-areas: >
          "outline1"
          "outline2"
      - grid-template-columns: 100%
      - grid-template-rows: 10vw
    card: 
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - border-width: 0
      - border-radius: 3vw
      - background: '[[[ return variables.主题 == "on" ? "rgb(255,255,255)" : "rgb(50,50,50)"; ]]]' 
      - font-size: 1.5vh
      - font-weight: bold
      - text-align: left
      - color: '[[[ return variables.主题 == "on" ? "rgb(0,0,0)" : "rgb(255,255,255)"; ]]]' 
  custom_fields:
    outline1:
      card:
        type: markdown
        content: |-
          {%set num =states
                      |rejectattr('entity_id','search','xiaomi_cn_mitv')
                      |rejectattr('entity_id','search','pc_')
                      |rejectattr('entity_id','search','xiaomidianshi')
                      |rejectattr('entity_id','search','sou_suo')
                      |map(attribute='state')
                      |select('in',['unavailable'])
                      |list |count %}
          {% if num >0 %}
          HA离线设备: <font color=red >{{num}}</font>
          {% else %}
          HA离线设备: 0
          {% endif %}
        card_mod: 
          style: '[[[ return theme_markdown() ]]]'
    outline2:
      card:
        type: custom:battery-state-card
        icon: mdi:power-plug-off
        card_mod: 
          style: '[[[ return theme_battery() ]]]'
        filter:
          include:
            - name: state
              value: unavailable
          exclude:
            - name: entity_id
              value: button.xiaomi_cn_mitv_*
            - name: entity_id
              value: select.xiaomi_cn_mitv_*
            - name: entity_id
              value: switch.xiaomi_cn_mitv_*
            - name: entity_id
              value: number.xiaomi_cn_mitv_*
            - name: entity_id
              value: notify.xiaomi_cn_mitv_*
            - name: entity_id
              value: sensor.xiaomi_cn_mitv_*
            - name: entity_id
              value: text.xiaomi_cn_mitv_*
            - name: entity_id
              value: media_player.xiaomi_cn_mitv*
            - name: entity_id
              value: select.xiaomidianshi*
            - name: entity_id
              value: sensor.pc_*
            - name: entity_id
              value: camera.pc_screen
            - name: entity_id
              value: weather.sou_suo

  
  











