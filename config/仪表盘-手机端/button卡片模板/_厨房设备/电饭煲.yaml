电饭煲卡片:
  triggers_update:
    - '[[[ return variables.开始亨饪 ?? "" ]]]'
    - '[[[ return variables.停止亨饪 ?? "" ]]]'
    - '[[[ return variables.电饭煲 ?? "" ]]]' 
  styles:
    grid:
      - grid-template-areas: >
          [[[
              window.电饭煲亨饪颜色 = "rgb(255,106,106)";  
              window.电饭煲保温颜色 = "rgb(255,140,0)";
              window.电饭煲预约颜色 = "rgb(255,165,79)";
              if(variables.电饭煲 !="none"){
                  return `"背景 背景 背景 背景"
                          "名称 名称 状态 开关"
                          "图标 空白区域 主按钮区域 主按钮区域"`
              } 
               if(variables.电饭煲 =="none"){
                  return `` 
              }  
          ]]]  
      - grid-template-columns: 13% 14% 61% 12%
      - grid-template-rows: 0 8vw 12vw
    card:
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - height: |
          [[[ 
              if( variables.电饭煲 !="none") {
                return "calc(20vw + 8px);"
              } 
              else return "0";
          ]]]
      - display: |
          [[[
              if (variables.电饭煲 == "none") {
                  return "none";
              }
          ]]]
  custom_fields:
    背景:
      card:
        type: custom:button-card
        styles:
          card:
            - margin-top: 20vw
            - padding: 0
            - border-width: 0
            - cursor: none
            - --mdc-ripple-press-opacity: 0
            - border-radius: 3vw
            - height: 20vw
            - background: | 
                [[[
                    var state = states[variables.电饭煲]?.state;
                    if(variables.主题=='off' && state =='烹饪中')  return "linear-gradient(90deg, "+电饭煲亨饪颜色+" -50%, rgb(50,50,50)    50%)";
                    if(variables.主题=='on'  && state =='烹饪中')  return "linear-gradient(90deg, "+电饭煲亨饪颜色+" -50%, rgb(255,255,255) 50%)";
                    if(variables.主题=='off' && state =='保温中')  return "linear-gradient(90deg, "+电饭煲保温颜色+" -50%, rgb(50,50,50)    50%)";
                    if(variables.主题=='on'  && state =='保温中')  return "linear-gradient(90deg, "+电饭煲保温颜色+" -50%, rgb(255,255,255) 50%)";
                    if(variables.主题=='off' && state =='预约中')  return "linear-gradient(90deg, "+电饭煲预约颜色+" -50%, rgb(50,50,50)    50%)";
                    if(variables.主题=='on'  && state =='预约中')  return "linear-gradient(90deg, "+电饭煲预约颜色+" -50%, rgb(255,255,255) 50%)";
                    return variables.主题 == "on" ? "rgb(255,255,255)" : "rgb(50,50,50)";
                ]]]
    开关:
      card:
        type: custom:button-card
        tap_action:
          action: call-service
          service: button.press
          data: {}
          target:
            entity_id: '[[[ return  variables.停止亨饪 ?? ""]]]'
        show_name: false
        show_icon: true
        icon: |
          [[[ 
              var state = states[variables.电饭煲]?.state;      
              if( state =='烹饪中')  return "mdi:toggle-switch";
              if( state =='保温中')  return "mdi:toggle-switch";
              if( state =='预约中')  return "mdi:toggle-switch";
              return "mdi:toggle-switch-off";
          ]]]
        styles:
          card:
            - cursor: none
            - --mdc-ripple-press-opacity: 0.2
            - padding: 0
            - border-radius: 2vw
            - width: 8vw
            - height: 8vw
            - border-width: 0
            - background: rgb(0,0,0,0)
          icon:
            - width: 8vw
            - height: 8vw
            - color: |
                [[[
                    var state = states[variables.电饭煲]?.state;
                    if( state =='烹饪中') return 电饭煲亨饪颜色;
                    if( state =='保温中') return 电饭煲保温颜色;
                    if( state =='预约中') return 电饭煲预约颜色;
                    return variables.主题 == "on" ? "rgb(255,255,255)" : "rgb(50,50,50)";
                ]]]
    图标:
      card:
        type: custom:button-card
        show_icon: true
        icon: |
          [[[ 
              var state = states[variables.电饭煲]?.state;    
              if( state =='烹饪中')  return "mdi:fan";
              if( state =='保温中')  return "mdi:fan";
              if( state =='预约中')  return "mdi:fan";
              return "mdi:fan-off";  
          ]]] 
        styles:
          card:
            - padding: 0
            - border-radius: 0
            - width: 20vw 
            - height: 20vw
            - margin-left: '-2vw'
            - border-width: 0
            - background: rgb(0,0,0,0)
          icon: 
            - color: |
                [[[
                    var state = states[variables.电饭煲]?.state;
                    if( state =='烹饪中') return 电饭煲亨饪颜色;
                    if( state =='保温中') return 电饭煲保温颜色;
                    if( state =='预约中') return 电饭煲预约颜色;
                    return variables.主题 == "on" ? "rgb(255,255,255)" : "rgb(50,50,50)";
                ]]]
            - animation: |
                [[[ 
                    var state = states[variables.电饭煲]?.state;   
                    if( state =='烹饪中')  return "rotating 1.5s linear infinite";
                    if( state =='保温中')  return "rotating 1.5s linear infinite";
                    if( state =='预约中')  return "rotating 1.5s linear infinite";
                    return "";
                ]]]
    名称:
      card:
        type: custom:button-card
        show_label: true
        label: '[[[ return states[variables.电饭煲]?.attributes.friendly_name ?? "名称"]]]'
        styles:
          card:
            - padding: 0
            - border-radius: 0
            - width: 50vw
            - margin-left: 2.5vw  
            - border-width: 0
            - background: rgb(0,0,0,0)
          label:
            - justify-self: start
            - font-size: 4vw
            - font-weight: bold
            - color: '[[[ return variables.主题 == "on" ? "rgb(50,50,50)" : "rgb(255,255,255)"; ]]]'
    状态:
      card:
        type: custom:button-card
        label: | 
          [[[  
              var state = states[variables.电饭煲]?.state;
              var date1 = new Date();        
              var time1 = date1.getTime();
              var date2 = new Date(states[variables.电饭煲]?.last_changed.slice(0, 19));
              var time = ((time1-date2.getTime())/60000-480).toFixed(0);
              if( state == "烹饪中") return state+": "+time+"min";   
              if( state == "保温中") return state+": "+time+"min";  
              if( state == "预约中") return state+": "+time+"min";
              return state ? state : "离线";   
          ]]]
        show_label: true
        styles: 
          card:
            - padding: 0
            - border-radius: 0
            - border-width: 0
            - background: rgb(0,0,0,0)
          label:
            - justify-self: start
            - font-size: 3vw
            - font-weight: bold
            - margin-top: 0.5vw
            - margin-left: 0vw
            - color: '[[[ return variables.主题 == "on" ? "rgb(50,50,50)" : "rgb(255,255,255)"; ]]]'
    主按钮区域:
      card:
        type: custom:button-card
        tap_action:
          action: none
        hold_action:
          action: none
        styles:
          grid:
            - grid-template-areas: |
                'b1 b2 b3 b4' 
            - grid-template-columns: 25% 25% 25% 25% 
            - grid-template-rows: 100%
          card:
            - cursor: none
            - width: 66vw
            - padding: 0
            - border-radius: 0
            - border-width: 0
            - background: rgb(0,0,0,0)
        custom_fields:
          b1:
            card:
              type: custom:button-card
              template: 电饭煲按钮样式模板
              icon: mdi:rice
              name: 精煮饭 
              variables:
                主题: '[[[ return variables.主题 ?? ""]]]'
              tap_action:
                action: call-service
                service: text.set_value
                data:
                  value: "1"
                target:
                  entity_id: '[[[ return  variables.开始亨饪 ?? ""]]]'
          b2:
            card:
              type: custom:button-card
              template: 电饭煲按钮样式模板
              icon: mdi:rice
              name: 快煮饭
              variables:
                主题: '[[[ return variables.主题 ?? ""]]]'
              tap_action:
                action: call-service
                service: text.set_value
                data:
                  value: "2"
                target:
                  entity_id: '[[[ return  variables.开始亨饪 ?? ""]]]'
          b3:
            card:
              type: custom:button-card
              template: 电饭煲按钮样式模板
              icon: mdi:rice
              name: 煮粥
              variables:
                主题: '[[[ return variables.主题 ?? ""]]]'
              tap_action:
                action: call-service
                service: text.set_value
                data:
                  value: "3"
                target:
                  entity_id: '[[[ return  variables.开始亨饪 ?? ""]]]'
          b4:
            card:
              type: custom:button-card
              template: 电饭煲按钮样式模板
              icon: mdi:heat-wave
              name: 保温
              variables:
                主题: '[[[ return variables.主题 ?? ""]]]'
              tap_action:
                action: call-service
                service: text.set_value
                data:
                  value: "4"
                target:
                  entity_id: '[[[ return  variables.开始亨饪 ?? ""]]]'
  
电饭煲按钮样式模板:
  triggers_update:
    - '[[[ return variables.开始亨饪 ?? ""]]]'
    - '[[[ return variables.停止亨饪 ?? ""]]]'
    - '[[[ return variables.电饭煲 ?? ""]]]' 
  layout: icon_name
  show_icon: true 
  show_name: true 
  styles: 
    card:
      - cursor: none
      - --mdc-ripple-press-opacity: 0.2
      - width: 15.2vw
      - height: 6vw
      - border-radius: 1.5vw 
      - background: '[[[ return variables.主题 == "on" ? "rgb(50,50,50)" : "rgb(120,120,120)"; ]]]'
    name:
      - color: rgb(255,255,255)
      - font-size: 0.9vh
      - margin-left: -2vw
      - font-weight: bold
    icon:
      - width: 3vw
      - height: 3vw
      - margin-left: 2vw
      - color: rgb(255,255,255)
