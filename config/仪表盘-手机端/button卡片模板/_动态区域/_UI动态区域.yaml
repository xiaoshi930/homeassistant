UI动态区域:
  triggers_update:
    - '[[[ return number1 ?? ""]]]'  
    - '[[[ return number2 ?? ""]]]'
    - '[[[ return switch1 ?? ""]]]'  
    - '[[[ return switch2 ?? ""]]]'       
  styles:
    grid:
      - grid-template-areas: |  
          "灯光 动态1 动态2 动态3 动态4 动态5 动态6 动态7 动态8 动态9 动态10 厨房设备 耗材" 
      - grid-template-columns: minmax(auto,auto)
      - justify-content: start
      - grid-template-rows: 100% 
    card:
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - padding: 0
      - height: 5.5vh
      - border-radius: 0 
      - border-width: 0 
      - background: rgb(0,0,0,0)
  custom_fields:
    动态1:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.动态1图标]]]'
        variables:
          sum: |
            [[[
                var sum =0;
                if (variables.动态1){
                  for (var i=0; i<variables.动态1?.length; i++){
                    var entityConfig = variables.动态1?.[i];  
                    var statesum = variables.动态1?.[i]?.states;
                    if (Array.isArray(entityConfig.entity)) { 
                      var activeCount =0;
                      for (var j=0; j < entityConfig.entity.length; j++){
                          var singleEntity  = entityConfig.entity[j];
                          var currentState = states[singleEntity].state;
                          if (statesum.includes(currentState)) {
                            activeCount ++;
                          }
                      }
                      if (activeCount >0) sum++;
                    } else {
                      var currentState = states[entityConfig.entity].state;
                      if (statesum.includes(currentState)){
                            sum++;
                      }
                    }
                  }
                }
                window.动态1 =sum;
            ]]]
        styles:
          card:
            - display: |
                [[[
                    if (!variables.动态1) return "none";
                    if ( 动态1 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("动态1")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 动态1 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 动态1 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible
          icon:
            - color: '[[[ return 动态1 > 0 ? variables.动态1颜色 : 按钮关闭颜色; ]]]'
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: '[[[ return 动态1 > 0? variables.动态1颜色 : "rgb(0,0,0,0)"; ]]]'
              - color: '[[[ return 动态1 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return  动态1 ? 动态1 : "" ]]]'
    动态2:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.动态2图标]]]'
        variables:
          sum: |
            [[[
                var sum =0;
                if (variables.动态2){
                  for (var i=0; i<variables.动态2?.length; i++){
                    var entityConfig = variables.动态2?.[i];  
                    var statesum = variables.动态2?.[i]?.states;
                    if (Array.isArray(entityConfig.entity)) { 
                      var activeCount =0;
                      for (var j=0; j < entityConfig.entity.length; j++){
                          var singleEntity  = entityConfig.entity[j];
                          var currentState = states[singleEntity].state;
                          if (statesum.includes(currentState)) {
                            activeCount ++;
                          }
                      }
                      if (activeCount >0) sum++;
                    } else {
                      var currentState = states[entityConfig.entity].state;
                      if (statesum.includes(currentState)){
                            sum++;
                      }
                    }
                  }
                }
                window.动态2 =sum;
            ]]]
        styles:
          card:
            - display: |
                [[[ 
                    if (!variables.动态2) return "none";
                    if ( 动态2 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("动态2")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 动态2 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 动态2 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible

          icon:
            - color: '[[[ return 动态2 > 0 ? variables.动态2颜色 : 按钮关闭颜色; ]]]'
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: '[[[ return 动态2 > 0? variables.动态2颜色 : "rgb(0,0,0,0)"; ]]]'
              - color: '[[[ return 动态2 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return  动态2 ? 动态2 : "" ]]]'
    动态3:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.动态3图标]]]'
        variables:
          sum: |
            [[[
                var sum =0;
                if (variables.动态3){
                  for (var i=0; i<variables.动态3?.length; i++){
                    var entityConfig = variables.动态3?.[i];  
                    var statesum = variables.动态3?.[i]?.states;
                    if (Array.isArray(entityConfig.entity)) { 
                      var activeCount =0;
                      for (var j=0; j < entityConfig.entity.length; j++){
                          var singleEntity  = entityConfig.entity[j];
                          var currentState = states[singleEntity].state;
                          if (statesum.includes(currentState)) {
                            activeCount ++;
                          }
                      }
                      if (activeCount >0) sum++;
                    } else {
                      var currentState = states[entityConfig.entity].state;
                      if (statesum.includes(currentState)){
                            sum++;
                      }
                    }
                  }
                }
                window.动态3 =sum;
            ]]]
        styles:
          card:
            - display: |
                [[[ 
                    if (!variables.动态3) return "none";
                    if ( 动态3 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("动态3")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 动态3 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 动态3 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible

          icon:
            - color: '[[[ return 动态3 > 0 ? variables.动态3颜色 : 按钮关闭颜色; ]]]'
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: '[[[ return 动态3 > 0? variables.动态3颜色 : "rgb(0,0,0,0)"; ]]]'
              - color: '[[[ return 动态3 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return  动态3 ? 动态3 : "" ]]]'
    动态4:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.动态4图标]]]'
        variables:
          sum: |
            [[[
                var sum =0;
                if (variables.动态4){
                  for (var i=0; i<variables.动态4?.length; i++){
                    var entityConfig = variables.动态4?.[i];  
                    var statesum = variables.动态4?.[i]?.states;
                    if (Array.isArray(entityConfig.entity)) { 
                      var activeCount =0;
                      for (var j=0; j < entityConfig.entity.length; j++){
                          var singleEntity  = entityConfig.entity[j];
                          var currentState = states[singleEntity].state;
                          if (statesum.includes(currentState)) {
                            activeCount ++;
                          }
                      }
                      if (activeCount >0) sum++;
                    } else {
                      var currentState = states[entityConfig.entity].state;
                      if (statesum.includes(currentState)){
                            sum++;
                      }
                    }
                  }
                }
                window.动态4 =sum;
            ]]]
        styles:
          card:
            - display: |
                [[[ 
                    if (!variables.动态4) return "none";
                    if ( 动态4 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("动态4")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 动态4 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 动态4 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible

          icon:
            - color: '[[[ return 动态4 > 0 ? variables.动态4颜色 : 按钮关闭颜色; ]]]'
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: '[[[ return 动态4 > 0? variables.动态4颜色 : "rgb(0,0,0,0)"; ]]]'
              - color: '[[[ return 动态4 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return  动态4 ? 动态4 : "" ]]]'
    动态5:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.动态5图标]]]'
        variables:
          sum: |
            [[[
                var sum =0;
                if (variables.动态5){
                  for (var i=0; i<variables.动态5?.length; i++){
                    var entityConfig = variables.动态5?.[i];  
                    var statesum = variables.动态5?.[i]?.states;
                    if (Array.isArray(entityConfig.entity)) { 
                      var activeCount =0;
                      for (var j=0; j < entityConfig.entity.length; j++){
                          var singleEntity  = entityConfig.entity[j];
                          var currentState = states[singleEntity].state;
                          if (statesum.includes(currentState)) {
                            activeCount ++;
                          }
                      }
                      if (activeCount >0) sum++;
                    } else {
                      var currentState = states[entityConfig.entity].state;
                      if (statesum.includes(currentState)){
                            sum++;
                      }
                    }
                  }
                }
                window.动态5 =sum;
            ]]]
        styles:
          card:
            - display: |
                [[[ 
                    if (!variables.动态5) return "none";
                    if ( 动态5 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("动态5")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 动态5 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 动态5 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible

          icon:
            - color: '[[[ return 动态5 > 0 ? variables.动态5颜色 : 按钮关闭颜色; ]]]'
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: '[[[ return 动态5 > 0? variables.动态5颜色 : "rgb(0,0,0,0)"; ]]]'
              - color: '[[[ return 动态5 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return  动态5 ? 动态5 : "" ]]]'
    动态6:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.动态6图标]]]'
        variables:
          sum: |
            [[[
                var sum =0;
                if (variables.动态6){
                  for (var i=0; i<variables.动态6?.length; i++){
                    var entityConfig = variables.动态6?.[i];  
                    var statesum = variables.动态6?.[i]?.states;
                    if (Array.isArray(entityConfig.entity)) { 
                      var activeCount =0;
                      for (var j=0; j < entityConfig.entity.length; j++){
                          var singleEntity  = entityConfig.entity[j];
                          var currentState = states[singleEntity].state;
                          if (statesum.includes(currentState)) {
                            activeCount ++;
                          }
                      }
                      if (activeCount >0) sum++;
                    } else {
                      var currentState = states[entityConfig.entity].state;
                      if (statesum.includes(currentState)){
                            sum++;
                      }
                    }
                  }
                }
                window.动态6 =sum;
            ]]]
        styles:
          card:
            - display: |
                [[[ 
                    if (!variables.动态6) return "none";
                    if ( 动态6 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("动态6")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 动态6 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 动态6 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible

          icon:
            - color: '[[[ return 动态6 > 0 ? variables.动态6颜色 : 按钮关闭颜色; ]]]'
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: '[[[ return 动态6 > 0? variables.动态6颜色 : "rgb(0,0,0,0)"; ]]]'
              - color: '[[[ return 动态6 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return  动态6 ? 动态6 : "" ]]]'
    动态7:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.动态7图标]]]'
        variables:
          sum: |
            [[[
                var sum =0;
                if (variables.动态7){
                  for (var i=0; i<variables.动态7?.length; i++){
                    var entityConfig = variables.动态7?.[i];  
                    var statesum = variables.动态7?.[i]?.states;
                    if (Array.isArray(entityConfig.entity)) { 
                      var activeCount =0;
                      for (var j=0; j < entityConfig.entity.length; j++){
                          var singleEntity  = entityConfig.entity[j];
                          var currentState = states[singleEntity].state;
                          if (statesum.includes(currentState)) {
                            activeCount ++;
                          }
                      }
                      if (activeCount >0) sum++;
                    } else {
                      var currentState = states[entityConfig.entity].state;
                      if (statesum.includes(currentState)){
                            sum++;
                      }
                    }
                  }
                }
                window.动态7 =sum;
            ]]]
        styles:
          card:
            - display: |
                [[[ 
                    if (!variables.动态7) return "none";
                    if ( 动态7 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("动态7")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 动态7 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 动态7 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible

          icon:
            - color: '[[[ return 动态7 > 0 ? variables.动态7颜色 : 按钮关闭颜色; ]]]'
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: '[[[ return 动态7 > 0? variables.动态7颜色 : "rgb(0,0,0,0)"; ]]]'
              - color: '[[[ return 动态7 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return  动态7 ? 动态7 : "" ]]]'
    动态8:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.动态8图标]]]'
        variables:
          sum: |
            [[[
                var sum =0;
                if (variables.动态8){
                  for (var i=0; i<variables.动态8?.length; i++){
                    var entityConfig = variables.动态8?.[i];  
                    var statesum = variables.动态8?.[i]?.states;
                    if (Array.isArray(entityConfig.entity)) { 
                      var activeCount =0;
                      for (var j=0; j < entityConfig.entity.length; j++){
                          var singleEntity  = entityConfig.entity[j];
                          var currentState = states[singleEntity].state;
                          if (statesum.includes(currentState)) {
                            activeCount ++;
                          }
                      }
                      if (activeCount >0) sum++;
                    } else {
                      var currentState = states[entityConfig.entity].state;
                      if (statesum.includes(currentState)){
                            sum++;
                      }
                    }
                  }
                }
                window.动态8 =sum;
            ]]]
        styles:
          card:
            - display: |
                [[[ 
                    if (!variables.动态8) return "none";
                    if ( 动态8 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("动态8")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 动态8 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 动态8 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible

          icon:
            - color: '[[[ return 动态8 > 0 ? variables.动态8颜色 : 按钮关闭颜色; ]]]'
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: '[[[ return 动态8 > 0? variables.动态8颜色 : "rgb(0,0,0,0)"; ]]]'
              - color: '[[[ return 动态8 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return  动态8 ? 动态8 : "" ]]]'
    动态9:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.动态9图标]]]'
        variables:
          sum: |
            [[[
                var sum =0;
                if (variables.动态9){
                  for (var i=0; i<variables.动态9?.length; i++){
                    var entityConfig = variables.动态9?.[i];  
                    var statesum = variables.动态9?.[i]?.states;
                    if (Array.isArray(entityConfig.entity)) { 
                      var activeCount =0;
                      for (var j=0; j < entityConfig.entity.length; j++){
                          var singleEntity  = entityConfig.entity[j];
                          var currentState = states[singleEntity].state;
                          if (statesum.includes(currentState)) {
                            activeCount ++;
                          }
                      }
                      if (activeCount >0) sum++;
                    } else {
                      var currentState = states[entityConfig.entity].state;
                      if (statesum.includes(currentState)){
                            sum++;
                      }
                    }
                  }
                }
                window.动态9 =sum;
            ]]]
        styles:
          card:
            - display: |
                [[[ 
                    if (!variables.动态9) return "none";
                    if ( 动态9 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("动态9")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 动态9 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 动态9 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible

          icon:
            - color: '[[[ return 动态9 > 0 ? variables.动态9颜色 : 按钮关闭颜色; ]]]'
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: '[[[ return 动态9 > 0? variables.动态9颜色 : "rgb(0,0,0,0)"; ]]]'
              - color: '[[[ return 动态9 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return  动态9 ? 动态9 : "" ]]]'
    动态10:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.动态10图标]]]'
        variables:
          sum: |
            [[[
                var sum =0;
                if (variables.动态10){
                  for (var i=0; i<variables.动态10?.length; i++){
                    var entityConfig = variables.动态10?.[i];  
                    var statesum = variables.动态10?.[i]?.states;
                    if (Array.isArray(entityConfig.entity)) { 
                      var activeCount =0;
                      for (var j=0; j < entityConfig.entity.length; j++){
                          var singleEntity  = entityConfig.entity[j];
                          var currentState = states[singleEntity].state;
                          if (statesum.includes(currentState)) {
                            activeCount ++;
                          }
                      }
                      if (activeCount >0) sum++;
                    } else {
                      var currentState = states[entityConfig.entity].state;
                      if (statesum.includes(currentState)){
                            sum++;
                      }
                    }
                  }
                }
                window.动态10 =sum;
            ]]]
        styles:
          card:
            - display: |
                [[[ 
                    if (!variables.动态10) return "none";
                    if ( 动态10 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("动态10")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 动态10 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 动态10 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible

          icon:
            - color: '[[[ return 动态10 > 0 ? variables.动态10颜色 : 按钮关闭颜色; ]]]'
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: '[[[ return 动态10 > 0? variables.动态10颜色 : "rgb(0,0,0,0)"; ]]]'
              - color: '[[[ return 动态10 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return  动态10 ? 动态10 : "" ]]]'
    灯光:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.灯光图标]]]'
        variables:
          sum: |
            [[[
                var sum = 0;
                if (variables.灯光){
                  for (var i=0; i< variables.灯光?.length; i++){
                      if (states[variables.灯光?.[i]]?.state=="on"){
                        sum++;
                      }
                  }
                }
                window.灯光 =sum;
            ]]]
        styles:
          card:
            - display: |
                [[[
                    if (!variables.灯光) return "none";
                    if ( 灯光 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("灯光")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 灯光 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 灯光 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible
          icon:
            - color: '[[[ return 灯光 > 0 ? variables.灯光颜色 : 按钮关闭颜色; ]]]'
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: '[[[ return 灯光 > 0? variables.灯光颜色 : "rgb(0,0,0,0)"; ]]]'
              - color: '[[[ return 灯光 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return  灯光 ? 灯光 : "" ]]]'
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: browser_mod.popup
            data:
              style: '[[[ return theme_none(); ]]]'
              content:
                type: custom:xiaoshi-light-card
                entities: '[[[ return variables.灯光]]]'
                width: 87vw
                height: 20vw
                rgb: true
                show: auto
                theme: '[[[ return theme()]]]'
    厨房设备:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.厨房设备图标]]]'
        variables:
          sum: |
            [[[
                var sum2 = 0;
                for (var i2=0; i2<variables.厨房设备?.length; i2++){
                    var entityConfig2 = variables.厨房设备?.[i2];  
                    var statesum2 = variables.厨房设备?.[i2]?.states;
                    if (Array.isArray(entityConfig2.entity)) { 
                      var activenumber2 =0;
                      for (var j2=0; j2 < entityConfig2.entity.length; j2++){
                          var singleEntity2  = entityConfig2.entity[j2];
                          var currentState2 = states[singleEntity2].state;
                          var isMatch = statesum2.some(function(condition) {
                              if (condition.startsWith(">") && !isNaN(condition.substring(1))) {
                                  var threshold = parseFloat(condition.substring(1));
                                  return !isNaN(currentState2) && parseFloat(currentState2) > threshold;
                              }
                              else {
                                  return currentState2 === condition;
                              }
                          });
                          if (isMatch) {
                              activenumber2++;
                          }
                      }
                      if (activenumber2 >0) sum2++;
                    } else {
                        var currentState2 = states[entityConfig2.entity].state;
                        var isMatch = statesum2.some(function(condition) {
                            if (condition.startsWith(">") && !isNaN(condition.substring(1))) {
                                var threshold = parseFloat(condition.substring(1));
                                return !isNaN(currentState2) && parseFloat(currentState2) > threshold;
                            }
                            else {
                                return currentState2 === condition;
                            }
                        });
                        
                        if (isMatch) {
                            sum2++;
                        }
                    }
                }
                window.厨房设备=sum2;
            ]]]
        styles:
          card:
            - display: |
                [[[
                    if (!variables.厨房设备) return "none";
                    if (厨房设备 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("设备")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 厨房设备 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 厨房设备 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible
          icon:
            - color: |
                [[[ 
                    if(厨房设备>0) return variables.厨房设备颜色;
                    return 按钮关闭颜色; 
                ]]]
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: |
                  [[[ 
                      if(厨房设备>0) return variables.厨房设备颜色;
                      return  "rgb(0,0,0,0)"; 
                  ]]]
              - color: '[[[ return 厨房设备 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return 厨房设备 ]]]'
    耗材:
      card:
        type: custom:button-card
        template: 动态按钮动画模板
        icon: '[[[ return variables.耗材图标]]]'
        variables:
          sum: |
            [[[
                var sum =0;
                for (var i=0; i<variables.耗材?.length; i++){
                    var convert = 1;
                    if (variables.耗材?.[i]?.convert !== undefined){
                      convert = variables.耗材?.[i]?.convert || "1";
                    } 
                    var state = states[variables.耗材?.[i]?.entity]?.state; //数值
                    var entity = variables.耗材?.[i]?.entity;               //实体
                    var domain = entity.split(".")[0];                      //类型
                    
                    if (domain=='sensor'){
                      if (state/convert <=21) sum++;
                    } 
                    else if (domain=='event'){
                      if(state!='unknown' && state.length>10) {
                          var stateDate  = new Date(state);
                          var todayDate = new Date();
                          var dayDifference = (todayDate -stateDate) / (1000 * 60 * 60 * 24);
                          if( dayDifference < 5) sum++;
                        }
                    }
                    else if (domain=='binary_sensor'){
                      if(state=='on') sum++;
                    }
                } 
                window.耗材 =sum;
            ]]]
        styles:
          card:
            - display: |
                [[[
                    if (!variables.耗材) return "none";
                    if ( 耗材 > 0 ) return "";
                    if( variables.常驻显示 && variables.显示){
                      if (variables.常驻显示.includes("耗材")) {
                          return  "";
                      }
                      else if (variables.显示== "总是显示") {
                          return  "";
                      }
                      else return "none";
                    }
                ]]]
            - animation: |
                [[[
                    if( 耗材 > 0 ) {
                      if (theme()=="on"  ) return "huxi_on 1s ease-in-out infinite";
                      if (theme()=="off" ) return "huxi_off 1s ease-in-out infinite";
                    }
                ]]] 
            - animation: '[[[ return 耗材 > 0 ? "shake 8s infinite ease-in-out" : "" ]]]'
            - overflow: visible
          icon:
            - color: '[[[ return 耗材 > 0 ? variables.耗材颜色 : 按钮关闭颜色; ]]]'
          custom_fields:
            num:  
              - position: absolute
              - align-self: start
              - clip-path: circle(0.6vh)
              - background: '[[[ return 耗材 > 0? variables.耗材颜色 : "rgb(0,0,0,0)"; ]]]'
              - color: '[[[ return 耗材 > 0? "rgb(255,255,255)" : "rgb(0,0,0,0)"; ]]]'
              - width: 1.3vh
              - margin-left: 6vw
              - margin-top: -0.6vh
              - font-size: 1vh
        custom_fields: 
          num: '[[[ return  耗材 ? 耗材 : "" ]]]' 
        tap_action:  
          action: fire-dom-event 
          browser_mod:
            service: browser_mod.popup
            data:
              style: '[[[ return theme_none(); ]]]'
              content:
                type: vertical-stack
                cards:          
                  - type: custom:button-card
                    template: 耗材信息卡片   
                    variables:
                      耗材: '[[[return variables.耗材]]]'
                      主题: '[[[ return theme() ]]]'

动态按钮动画模板:                                                         
  triggers_update: all 
  extra_styles: |
      @keyframes shake{
          0%  {transform: translate(0, 0) rotate(0deg); }
          5%  {transform: translate(-4px, -3px) rotate(-10deg); }
          10% {transform: translate(4px, -3px) rotate(10deg); }
          15% {transform: translate(0, 2px) rotate(0deg);  }
          20% {transform: translate(0, -1px) rotate(5deg); }
          25% {transform: translate(0, 0) rotate(0deg); }
      }      
      @keyframes huxi_on {
        0%,100% { box-shadow: 0 0 0.5vw 0.1vw  rgb(0,0,0,0.1); }
        50%     { box-shadow: 0 0 0.5vw 0.3vw  rgb(0,0,0,0.3); }
      }     
      @keyframes huxi_off {
        0%,100% { box-shadow: 0 0 0.5vw 0.1vw  rgb(200,200,200,0.1); }
        50%     { box-shadow: 0 0 0.5vw 0.3vw  rgb(200,200,200,0.5); }
      } 
  styles: 
    icon:
      - width: 6vw
      - height: 2vh
      - animation-delay: 3s
    card:
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - padding: 0
      - border: '[[[ return theme_border(0,255,0.15) ]]]'
      - border-radius: 1.2vh
      - width: 8vw
      - height: 3vh
      - margin-top: 1vh
      - margin-right: 2vw
      - background: '[[[ return theme_color(255,50,0.5) ]]]'