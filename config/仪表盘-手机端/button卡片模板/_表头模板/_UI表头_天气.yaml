UI表头_天气:     
  triggers_update:
    - '[[[ return number1 ?? ""]]]'  
    - '[[[ return number2 ?? ""]]]'  
    - '[[[ return switch1 ?? ""]]]'  
    - '[[[ return switch2 ?? ""]]]'  
    - '[[[ return weatherb ?? ""]]]'  
  layout: icon_state
  show_state: true
  show_name: false
  entity: |
      [[[
          if (hass.user.name == name1) return weather1 ? weather1 : "";
          if (hass.user.name == name2) return weather2 ? weather2 : "";
      ]]]
  icon: |
    [[[
        var icon = entity?.state;
        if (icon == "晴") return "mdi:weather-sunny";
        if (icon == "多云") return "mdi:weather-partly-cloudy";
        if (icon == "阴") return "mdi:cloud";
        if (icon == "雾") return "mdi:weather-fog";
        if (icon == "小雨") return "mdi:weather-hail";
        if (icon == "中雨") return "mdi:weather-hail";
        if (icon == "大雨") return "mdi:weather-hail";
        if (icon == "暴雨") return "mdi:weather-hail";
        if (icon == "小雪") return "mdi:snowflake";
        if (icon == "中雪") return "mdi:snowflake";
        if (icon == "大雪") return "mdi:snowflake";
        if (icon == "暴雪") return "mdi:snowflake";
        if (icon == "多云") return "mdi:cloud";
        if (icon == "雷阵雨") return "mdi:flash";
        return "mdi:weather-sunny";
    ]]] 
  styles:
    icon: 
      - width: 3.8vw
      - height: 2vh 
      - margin-left: 1vw
      - color: | 
          [[[
              if (hass.user.name == name1) {
                var warning  = states[weather1]?.attributes?.warning ?? "";
              }
              if (hass.user.name == name2) {
                var warning  = states[weather2]?.attributes?.warning ?? "";
              }
              var level = "";
              var priority = ["红色", "橙色", "黄色", "蓝色"];
              for (let i=0;i<warning.length;i++){
                var currentlevel = warning[i].level;
                if (priority.indexOf(currentlevel) < priority.indexOf(level) || level === "") {
                    level = currentlevel;
                }
                if (level === "红色") {
                    break;
                }
              } 
              if (level=="红色") return "rgb(255,50,50)";
              if (level=="橙色") return "rgb(255,100,0)";
              if (level=="黄色") return "rgb(255,200,0)";
              if (level=="蓝色") return "rgb(50,150,200)";
              else  return theme_color(0,255,0.9);
          ]]]
    state:
      - font-size: 1.25vh
      - width: 10vw
      - margin-left: -1.5vw
      - text-align: center
      - color: '[[[ return theme_color(0,255,1) ]]]' 
    card:
      - cursor: none
      - --mdc-ripple-press-opacity: 0.2  
      - padding: 0
      - background: '[[[ return theme_color(255,50,0.5) ]]]' 
      - border: '[[[ return theme_border(0,255,0.15) ]]]'
      - border-radius: 4vw
      - width: 16vw
      - height: 2.8vh
  tap_action: 
    action: fire-dom-event
    browser_mod:
      service: browser_mod.popup
      data:  
        style: '[[[ return theme_none(); ]]]'
        content:
          type: custom:button-card
          template: 天气弹出模板

天气弹出模板:  
  triggers_update: all     
  styles:
    grid:
      - grid-template-areas: |
          "device1" "device2" "device3" "device4"
      - grid-template-columns: 100%
      - grid-auto-rows: minmax(auto, auto)  # 行高自动 + 最小高度自适应
      - grid-auto-flow: row
    card: 
      - padding: 0
      - cursor: none
      - --mdc-ripple-press-opacity: 0   
  custom_fields:
    device1:  
      card: 
        type: custom:button-card
        template: 天气卡片
        variables:   
          主题: '[[[ return theme() ]]]'
          entity:  | 
            [[[
                if (hass.user.name == name1) return weather1 ? weather1 : "";
                if (hass.user.name == name2) return weather2 ? weather2 : "";
            ]]] 
          switch: '[[[return weatherb ]]]'
          yujing: | 
            [[[
                if (hass.user.name == name1) return weatheryj1 ? weatheryj1 : "";
                if (hass.user.name == name2) return weatheryj2 ? weatheryj2 : "";
            ]]] 
          mode: "手机"
    device2:
      card: 
        type: custom:button-card 
        template: 天气卡片
        variables: 
          主题: '[[[ return theme() ]]]'
          entity: '[[[return weatherh ]]]'
          switch: '[[[return weatherb ]]]'
          yujing: '[[[return weatheryjh ]]]'
          mode: "家"       
    device3:
      card:  
        type: custom:button-card 
        template: 天气卡片
        variables: 
          主题: '[[[ return theme() ]]]'
          entity: '[[[return weathers ]]]'
          switch: '[[[return weatherb ]]]'
          yujing: '[[[return weatheryjs ]]]'
          mode: "搜索"   
    device4:
      card: 
        type: custom:button-card     
        triggers_update:
          - '[[[ return number1 ]]]'  
          - '[[[ return number2 ]]]'   
          - '[[[ return switch1 ]]]'  
          - '[[[ return switch2 ]]]'  
        styles:
          grid: 
            - grid-template-areas: |
                "搜索 切换" 
            - grid-template-columns: 70% 30%
            - grid-template-rows: 56px
          card:
            - cursor: none
            - --mdc-ripple-press-opacity: 0
            - padding: 0
            - height: 56px
            - border-radius: 10px
        custom_fields:
          切换:
            card:
              type: custom:button-card 
              entity: '[[[return weatherb ]]]'
              template: 切换按钮
              variables: 
                主题: '[[[ return theme() ]]]'
          搜索:
            card:
              type: custom:xiaoshi-text-card
              entity: text.set_city
              height: 56px
              width: 65vw
              border-radius: 10px
              theme: '[[[ return theme() ]]]'
切换按钮:
  label: |
    [[[
        if (states[weatherb].state =='on') return "切换小时";
        if (states[weatherb].state =='off') return "切换每日";
    ]]]
  show_icon: false
  show_name: false 
  show_label: true
  styles:
    label:
      - color:  '[[[ return theme_color(0,255,0.9) ]]]' 
      - font-size: 3vw
    card:
      - cursor: none
      - --mdc-ripple-press-opacity: 0
      - padding: 0 0 0 0
      - height: 56px
      - width: 26vw
      - border-radius: 10px
      - background: '[[[ return theme_color(255,50,0.5) ]]]' 
      - border: '[[[ return theme_border(0,255,0.15) ]]]'
      - margin-left: 2vw

